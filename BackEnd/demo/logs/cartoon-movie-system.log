2025-06-19 01:14:18 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.7 with PID 18820 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\classes started by Admin in C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo)
2025-06-19 01:14:18 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-19 01:14:18 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-19 01:14:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-19 01:14:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 11 JPA repository interfaces.
2025-06-19 01:14:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-19 01:14:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-19 01:14:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-19 01:14:18 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-19 01:14:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 666 ms
2025-06-19 01:14:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-19 01:14:18 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2cfe272f
2025-06-19 01:14:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-19 01:14:19 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-19 01:14:19 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-19 01:14:19 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-19 01:14:19 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-19 01:14:19 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-19 01:14:19 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-19 01:14:19 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-19 01:14:19 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-19 01:14:19 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 01:14:20 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-19 01:14:20 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-19 01:14:20 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-19 01:14:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-19 01:14:20 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 87 mappings in 'requestMappingHandlerMapping'
2025-06-19 01:14:20 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-19 01:14:20 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-19 01:14:20 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-19 01:14:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-19 01:14:20 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 2.884 seconds (process running for 3.052)
2025-06-19 01:24:59 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-19 01:24:59 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4d0042eb
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@12f1b76c
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-19 01:24:59 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@14de8f5e, com.example.demo.entity.Cartoon@6ab1f341, com.example.dem (truncated)...]
2025-06-19 01:24:59 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:25:28 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/6/episodes", parameters={}
2025-06-19 01:25:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/6", parameters={}
2025-06-19 01:25:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:25:28 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:25:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:25:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:25:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:25:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@2cda6fb9]
2025-06-19 01:25:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:25:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:25:28 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:25:28 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@1ceb091f]]
2025-06-19 01:25:28 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:25:28 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/6/rating", parameters={}
2025-06-19 01:25:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:25:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:25:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:25:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:25:28 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:25:39 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:25:39 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:25:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:25:39 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:25:39 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@1ce68152, com.example.demo.entity.Cartoon@4e0f1bd1, com.example.dem (truncated)...]
2025-06-19 01:25:39 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:26:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:26:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:26:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:26:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:26:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@38897c9, com.example.demo.entity.Cartoon@166cf081, com.example.demo (truncated)...]
2025-06-19 01:26:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:27:03 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:27:03 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:27:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:27:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:27:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:27:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:27:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:27:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:27:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@2dac78cf]
2025-06-19 01:27:03 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:27:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:27:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@676661cb, com.example.demo.entity.Episode@53a407c8]]
2025-06-19 01:27:03 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:27:03 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:27:03 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:27:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:27:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:27:03 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:27:03 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:27:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:27:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:27:16 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:27:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:27:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:27:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:27:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:27:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:27:16 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:27:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5e31f136]
2025-06-19 01:27:16 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@b73f2fb, com.example.demo.entity.Episode@b939d02]]
2025-06-19 01:27:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:27:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:27:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:27:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:27:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:27:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:27:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:27:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:28:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:28:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:28:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:28:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:28:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:28:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:28:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@d88506f]
2025-06-19 01:28:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:28:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:28:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@44711446, com.example.demo.entity.Episode@422c6af3]]
2025-06-19 01:28:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:28:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:28:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:28:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:28:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:28:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:28:04 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:28:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:28:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:28:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:28:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:28:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:28:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:28:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@7bd4e151]
2025-06-19 01:28:04 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@308125c7, com.example.demo.entity.Episode@498757c1]]
2025-06-19 01:28:04 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:28:04 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:28:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:28:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:28:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:28:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:28:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:28:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:28:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:28:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:28:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:28:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:28:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:28:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@728e17e8]
2025-06-19 01:28:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:28:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@43cbacb2, com.example.demo.entity.Episode@78f2a95e]]
2025-06-19 01:28:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:28:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:28:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:28:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:28:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:28:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:28:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:28:49 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:28:49 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:28:49 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:28:49 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:28:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:28:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:49 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:28:49 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@6357200c]
2025-06-19 01:28:49 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:28:49 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:28:49 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@e02c415, com.example.demo.entity.Episode@4724da61]]
2025-06-19 01:28:49 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:28:49 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:28:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:28:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:28:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:28:49 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:28:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:28:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:28:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:28:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:28:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:28:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:28:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:28:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@1ba84d98]
2025-06-19 01:28:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@ab6675c, com.example.demo.entity.Episode@11523925]]
2025-06-19 01:28:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:28:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:28:49 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:28:49 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:28:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:28:49 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:28:49 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:28:56 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:28:56 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:28:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:28:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:28:56 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [*/*]
2025-06-19 01:28:56 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:29:07 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/rating", parameters={}
2025-06-19 01:29:07 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:29:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:29:07 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [*/*]
2025-06-19 01:29:07 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:29:32 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:29:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:29:32 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:29:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:29:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:29:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:32 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:29:32 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@afc4a09]
2025-06-19 01:29:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:29:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@7a269936, com.example.demo.entity.Episode@312d63a0]]
2025-06-19 01:29:32 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:29:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:29:32 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:29:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:29:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:29:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:29:32 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:29:32 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:29:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:29:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:29:32 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:29:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:29:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:32 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:29:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:29:32 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@1c80107]
2025-06-19 01:29:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@40b469eb, com.example.demo.entity.Episode@1a33c59c]]
2025-06-19 01:29:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:29:32 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:29:32 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:29:32 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:29:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:29:32 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:29:32 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:29:46 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:29:46 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:29:46 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:29:46 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:29:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:29:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:46 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:29:46 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@77916f32]
2025-06-19 01:29:46 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:29:46 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:29:46 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@41d2d90a, com.example.demo.entity.Episode@746977c9]]
2025-06-19 01:29:46 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:29:46 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:29:46 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:29:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:29:46 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:29:46 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:29:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:29:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:29:47 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:29:47 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:29:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:29:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:29:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@1824595f]
2025-06-19 01:29:47 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:29:47 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@478f1c18, com.example.demo.entity.Episode@18d4a919]]
2025-06-19 01:29:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:29:47 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:29:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/rating", parameters={}
2025-06-19 01:29:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:29:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:29:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:29:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:29:49 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/rating", parameters={}
2025-06-19 01:29:49 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:29:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:29:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:29:49 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [*/*]
2025-06-19 01:29:49 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:30:07 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:30:07 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:30:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:30:07 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-06-19 01:30:07 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@9f6342d, com.example.demo.entity.Cartoon@3d8e9a54, com.example.demo (truncated)...]
2025-06-19 01:30:07 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:30:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/rating", parameters={}
2025-06-19 01:30:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonRating(Integer)
2025-06-19 01:30:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:30:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(r.rating),
        COUNT(r) 
    FROM
        Review r 
    WHERE
        r.cartoon.id = :cartoonId */ select
            avg(r1_0.rating),
            count(r1_0.id) 
        from
            review r1_0 
        where
            r1_0.cartoon_id=?
2025-06-19 01:30:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/octet-stream', given [*/*] and supported [*/*]
2025-06-19 01:30:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-19 01:30:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:30:32 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:30:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:30:32 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:30:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:30:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:30:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:30:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:30:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@2172d27d]
2025-06-19 01:30:32 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:30:32 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@19f08e20, com.example.demo.entity.Episode@497dc356]]
2025-06-19 01:30:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:30:32 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:30:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:30:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:30:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:30:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:30:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:30:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:30:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:30:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:30:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:30:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@6cfcf802]
2025-06-19 01:30:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@7f61f7f3, com.example.demo.entity.Episode@79f31864]]
2025-06-19 01:30:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:30:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:30:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:30:44 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:30:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:30:44 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:30:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:30:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:30:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:30:44 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:30:44 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@6d51b075]
2025-06-19 01:30:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:30:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@2cf573aa, com.example.demo.entity.Episode@25ba5c73]]
2025-06-19 01:30:44 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:30:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:30:45 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:30:45 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:30:45 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:30:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:30:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:30:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:30:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:30:45 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:30:45 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@2b98078d]
2025-06-19 01:30:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:30:45 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@769e0ff5, com.example.demo.entity.Episode@17862253]]
2025-06-19 01:30:45 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:30:45 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:31:03 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login", parameters={}
2025-06-19 01:31:03 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.LoginController#login()
2025-06-19 01:31:03 [http-nio-8080-exec-10] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-19 01:31:03 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:31:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-19 01:31:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:31:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-19 01:31:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.gender,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin?continue", parameters={masked}
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 2 reviews
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 0: ID=18, user=null, cartoon=Bleach
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 1: ID=19, user=null, cartoon=Dragon Ball Z
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 2 reviews
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 0: ID=18, user=null, cartoon=Bleach
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 1: ID=19, user=null, cartoon=Dragon Ball Z
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 2 reviews
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 0: ID=18, user=null, cartoon=Bleach
2025-06-19 01:31:05 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 1: ID=19, user=null, cartoon=Dragon Ball Z
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.gender,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.gender,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-19 01:31:05 [http-nio-8080-exec-7] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-7][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-19 01:31:05 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:31:05 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/sidebar.css", parameters={}
2025-06-19 01:31:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/admin.css", parameters={}
2025-06-19 01:31:05 [http-nio-8080-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:31:05 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:31:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-19 01:31:05 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/movies", parameters={}
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminMovieController#listMovies(String, String, String, String, Model)
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-19 01:31:09 [http-nio-8080-exec-2] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-2][movies] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template movies, line 23, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-19 01:31:09 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:31:09 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/movies.css", parameters={}
2025-06-19 01:31:09 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:31:09 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-19 01:31:09 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/users", parameters={}
2025-06-19 01:31:09 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#listUsers(Model)
2025-06-19 01:31:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.gender,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-19 01:31:09 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-19 01:31:09 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-5][users] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template users, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-19 01:31:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-19 01:31:09 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:31:27 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:31:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:31:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:31:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:31:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@59d61aad, com.example.demo.entity.Cartoon@15e7498b, com.example.dem (truncated)...]
2025-06-19 01:31:27 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:31:34 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:31:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:31:34 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:31:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:31:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:31:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:31:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:31:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:31:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@692e01ef]
2025-06-19 01:31:34 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:31:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:31:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@5a4d294, com.example.demo.entity.Episode@613b28c7]]
2025-06-19 01:31:34 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:32:43 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:32:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:32:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:32:43 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:32:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:32:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:32:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:32:43 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:32:43 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@680cffdd, com.example.demo.entity.Episode@547b1b51]]
2025-06-19 01:32:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:32:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@7402683]
2025-06-19 01:32:43 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:32:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:32:54 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:32:54 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:32:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:32:54 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:32:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:32:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:32:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:32:54 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:32:54 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@73c3a8eb]
2025-06-19 01:32:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:32:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@7d4f811c, com.example.demo.entity.Episode@a7452a5]]
2025-06-19 01:32:54 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:32:54 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:33:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:33:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:33:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:33:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:33:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:33:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:33:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:33:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:33:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:33:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@7759c86a, com.example.demo.entity.Episode@7dd24a8d]]
2025-06-19 01:33:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@39d5543f]
2025-06-19 01:33:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:33:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:33:48 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:33:48 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:33:48 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:33:48 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:33:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:33:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:33:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:33:48 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:33:48 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@51e970c1]
2025-06-19 01:33:48 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:33:48 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@340ce743, com.example.demo.entity.Episode@1ccc5af2]]
2025-06-19 01:33:48 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:33:48 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:34:17 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:34:17 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:34:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:34:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:34:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:34:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:34:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:34:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:34:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@49881e7e]
2025-06-19 01:34:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:34:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@23e0c7ee, com.example.demo.entity.Episode@5796799]]
2025-06-19 01:34:17 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:34:17 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:34:40 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:34:40 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:34:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:34:40 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:34:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:34:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:34:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:34:40 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:34:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:34:40 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@4b70a6d8]
2025-06-19 01:34:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@6cc0bb0f, com.example.demo.entity.Episode@4ae7fda8]]
2025-06-19 01:34:40 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:34:40 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:34:43 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:34:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:34:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:34:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:34:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:34:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:34:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:34:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:34:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@3c69b5a5]
2025-06-19 01:34:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:34:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@7e5de113, com.example.demo.entity.Episode@5cc1b87]]
2025-06-19 01:34:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:34:43 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:35:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:35:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:35:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:35:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:35:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:35:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:35:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:35:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:35:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:35:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@3cdb91f]
2025-06-19 01:35:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@2a3136cf, com.example.demo.entity.Episode@7212526a]]
2025-06-19 01:35:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:35:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:35:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:35:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:35:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:35:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:35:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:35:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:35:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:35:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:35:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@6d78bca8]
2025-06-19 01:35:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:35:36 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@5d79f060, com.example.demo.entity.Episode@b14cfd7]]
2025-06-19 01:35:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:35:36 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:35:55 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:35:55 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:35:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:35:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:35:55 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-06-19 01:35:55 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@94864f2, com.example.demo.entity.Episode@1de49786]]
2025-06-19 01:35:55 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:36:43 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:36:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:36:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:36:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:36:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:36:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:36:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:36:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:36:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@342c9921]
2025-06-19 01:36:43 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:36:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:36:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@53b188a3, com.example.demo.entity.Episode@421e2649]]
2025-06-19 01:36:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:37:28 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:37:28 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:37:28 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:37:28 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:37:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:37:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:37:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:37:28 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:37:28 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@15e984cf]
2025-06-19 01:37:28 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:37:28 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:37:28 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@36ff94a7, com.example.demo.entity.Episode@42b06e8c]]
2025-06-19 01:37:28 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:37:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/episodes", parameters={}
2025-06-19 01:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.EpisodeRestController#create(Episode)
2025-06-19 01:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.demo.entity.Episode@54882bf8]
2025-06-19 01:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, HttpServletRequest)
2025-06-19 01:37:30 [http-nio-8080-exec-7] ERROR c.e.d.e.GlobalExceptionHandler - Runtime exception at /api/episodes: Access Denied
org.springframework.security.authorization.AuthorizationDeniedException: Access Denied
	at org.springframework.security.authorization.method.ThrowingMethodAuthorizationDeniedHandler.handleDeniedInvocation(ThrowingMethodAuthorizationDeniedHandler.java:38)
	at org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager.handleDeniedInvocation(PreAuthorizeAuthorizationManager.java:108)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.handle(AuthorizationManagerBeforeMethodInterceptor.java:287)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:260)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.example.demo.controller.api.EpisodeRestController$$SpringCGLIB$$0.create(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authorization.AuthorizationDeniedException: Access Denied] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please try again later., timestamp=2025-06-19T01:37:30.468312900, path=/api/episodes, developerMessage=Access Denied}]
2025-06-19 01:37:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please try again later., timestamp=2025-06-19T01:37:30.468312900, path=/api/episodes, developerMessage=Access Denied}]
2025-06-19 01:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:37:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:38:37 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 9276 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\demo-0.0.1-SNAPSHOT.jar started by Admin in c:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo)
2025-06-19 01:38:37 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-19 01:38:37 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-19 01:38:37 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:38:37 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:38:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:38:37 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:38:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:38:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:38:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:38:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:38:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@3f72417c]
2025-06-19 01:38:37 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:38:37 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@753ddd60, com.example.demo.entity.Episode@62dd804]]
2025-06-19 01:38:37 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:38:37 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-19 01:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 7 JPA repository interfaces.
2025-06-19 01:38:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-19 01:38:39 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-19 01:38:39 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-19 01:38:39 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-19 01:38:39 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1350 ms
2025-06-19 01:38:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-19 01:38:39 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5db948c9
2025-06-19 01:38:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-19 01:38:39 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-19 01:38:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-19 01:38:39 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-19 01:38:39 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-19 01:38:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-19 01:38:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-19 01:38:39 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-19 01:38:40 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-19 01:38:40 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 01:38:40 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-19 01:38:41 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-19 01:38:41 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-19 01:38:41 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-19 01:38:41 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 66 mappings in 'requestMappingHandlerMapping'
2025-06-19 01:38:41 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-19 01:38:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-19 01:38:42 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-19 01:38:42 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-06-19 01:38:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 01:38:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-19 01:38:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-19 01:38:42 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-19 01:38:42 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-06-19 01:38:42 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:38:42 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:38:42 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:38:42 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:38:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:38:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:38:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:38:42 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:38:42 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:38:42 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5344e2bc]
2025-06-19 01:38:42 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@5be75ea9, com.example.demo.entity.Episode@5679957b]]
2025-06-19 01:38:42 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:38:42 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:38:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:38:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:38:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.CartoonController#getEpisodes(Integer)
2025-06-19 01:38:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:38:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:38:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:38:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:38:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:38:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@54ee4f8e]
2025-06-19 01:38:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:38:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.example.demo.entity.Episode@4619b066, com.example.demo.entity.Episode@225c1f2a]]
2025-06-19 01:38:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:38:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:39:37 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 22860 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\demo-0.0.1-SNAPSHOT.jar started by Admin in c:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo)
2025-06-19 01:39:37 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-19 01:39:37 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-19 01:39:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-19 01:39:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 7 JPA repository interfaces.
2025-06-19 01:39:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-19 01:39:39 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-19 01:39:39 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-19 01:39:39 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-19 01:39:39 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1219 ms
2025-06-19 01:39:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-19 01:39:39 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@15214920
2025-06-19 01:39:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-19 01:39:39 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-19 01:39:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-19 01:39:39 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-19 01:39:39 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-19 01:39:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-19 01:39:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-19 01:39:39 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-19 01:39:40 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-19 01:39:40 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 01:39:40 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-19 01:39:41 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-19 01:39:41 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-19 01:39:41 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-19 01:39:41 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 66 mappings in 'requestMappingHandlerMapping'
2025-06-19 01:39:41 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-19 01:39:41 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-19 01:39:41 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-19 01:39:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-19 01:39:41 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 4.318 seconds (process running for 4.658)
2025-06-19 01:39:50 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-19 01:39:50 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@51cbd1d
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@12aa9370
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-19 01:39:50 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:39:50 [http-nio-8080-exec-1] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/3/episodes: No static resource api/cartoons/3/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/3/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/3/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:39:50.187906100, path=/api/cartoons/3/episodes, developerMessage=No static resource api/cartoons/3/episodes.}]
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:39:50.187906100, path=/api/cartoons/3/episodes, developerMessage=No static resource api/cartoons/3/episodes.}]
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:39:50 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:39:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:39:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:39:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:39:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:39:53 [http-nio-8080-exec-2] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/3/episodes: No static resource api/cartoons/3/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/3/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:39:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/3/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:39:53.702989900, path=/api/cartoons/3/episodes, developerMessage=No static resource api/cartoons/3/episodes.}]
2025-06-19 01:39:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:39:53.702989900, path=/api/cartoons/3/episodes, developerMessage=No static resource api/cartoons/3/episodes.}]
2025-06-19 01:39:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:39:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:40:01 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:40:01 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:40:01 [http-nio-8080-exec-5] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:40:01.596535, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:40:01.596535, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:40:01 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:40:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:40:01 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:40:01 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@3edc006a]
2025-06-19 01:40:01 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:40:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:40:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:40:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:40:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:40:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:40:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:40:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:40:43 [http-nio-8080-exec-7] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:40:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:40:43.395935400, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:40:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:40:43.395935400, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:40:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:40:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@cc81cd]
2025-06-19 01:40:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:40:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:40:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:41:29 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:41:29 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:41:29 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:41:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:41:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:41:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:41:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:41:29 [http-nio-8080-exec-9] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:41:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:41:29.454424500, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:41:29 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:41:29.454424500, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:41:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:41:29 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:41:29 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@3678e2ed]
2025-06-19 01:41:29 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:41:29 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:41:29 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:41:29 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:41:29 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:41:29 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:41:29 [http-nio-8080-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:41:29 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:41:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:41:29 [http-nio-8080-exec-1] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:41:29 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:41:29.910539700, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:41:29 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:41:29.910539700, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:41:29 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:41:29 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:41:29 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@3daeab8]
2025-06-19 01:41:29 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:41:29 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:42:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:42:43 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:42:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:42:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:42:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:42:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:42:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:42:43 [http-nio-8080-exec-4] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:42:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:42:43.402260300, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:42:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:42:43.402260300, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:42:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:42:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:42:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@24eededd]
2025-06-19 01:42:43 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:42:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:43:14 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:43:14 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:43:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:43:14 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:43:14 [http-nio-8080-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:43:14 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:43:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:43:14 [http-nio-8080-exec-7] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:43:14 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:43:14.465657900, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:43:14 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:43:14.465657900, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:43:14 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:43:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:43:14 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@63536e43]
2025-06-19 01:43:14 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:43:14 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:43:14 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:43:14 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:43:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:43:14 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:43:14 [http-nio-8080-exec-9] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:43:14 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:43:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:43:14 [http-nio-8080-exec-9] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:43:14 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:43:14.748121, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:43:14 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:43:14.748121, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:43:14 [http-nio-8080-exec-9] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:43:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:43:14 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@55600ba3]
2025-06-19 01:43:14 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:43:14 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:43:27 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 3064 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\demo-0.0.1-SNAPSHOT.jar started by Admin in c:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo)
2025-06-19 01:43:27 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-19 01:43:27 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-19 01:43:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-19 01:43:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 7 JPA repository interfaces.
2025-06-19 01:43:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-19 01:43:29 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-19 01:43:29 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-19 01:43:29 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-19 01:43:29 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1998 ms
2025-06-19 01:43:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-19 01:43:30 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3830b06c
2025-06-19 01:43:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-19 01:43:30 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-19 01:43:30 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-19 01:43:30 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-19 01:43:30 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-19 01:43:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-19 01:43:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-19 01:43:30 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-19 01:43:31 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-19 01:43:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 01:43:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-19 01:43:31 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-19 01:43:31 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-19 01:43:31 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-19 01:43:31 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 66 mappings in 'requestMappingHandlerMapping'
2025-06-19 01:43:32 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-19 01:43:32 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-19 01:43:32 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-19 01:43:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-19 01:43:32 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 5.211 seconds (process running for 5.581)
2025-06-19 01:43:43 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-19 01:43:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3e13a74
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@41fc5625
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-19 01:43:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:43:43 [http-nio-8080-exec-1] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/3/episodes: No static resource api/cartoons/3/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/3/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/3/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:43:43.190416300, path=/api/cartoons/3/episodes, developerMessage=No static resource api/cartoons/3/episodes.}]
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:43:43.190416300, path=/api/cartoons/3/episodes, developerMessage=No static resource api/cartoons/3/episodes.}]
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:43:43 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:43:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:43:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:43:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:43:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:43:47 [http-nio-8080-exec-2] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/3/episodes: No static resource api/cartoons/3/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/3/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:43:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/3/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:43:47.313775500, path=/api/cartoons/3/episodes, developerMessage=No static resource api/cartoons/3/episodes.}]
2025-06-19 01:43:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:43:47.313775500, path=/api/cartoons/3/episodes, developerMessage=No static resource api/cartoons/3/episodes.}]
2025-06-19 01:43:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:43:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:44:09 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:44:09 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:44:09 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:44:09 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:44:09 [http-nio-8080-exec-5] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:44:09 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:44:09 [http-nio-8080-exec-5] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:44:09 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:44:09.841529500, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:44:09 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:44:09.841529500, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:44:09 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:44:09 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:44:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:44:09 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:44:09 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@4c5e62c7]
2025-06-19 01:44:09 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:44:10 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:44:10 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:44:10 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:44:10 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:44:10 [http-nio-8080-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:44:10 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:44:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:44:10 [http-nio-8080-exec-7] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:44:10 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:44:10.538326800, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:44:10 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:44:10.538326800, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:44:10 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:44:10 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:44:10 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@62502e05]
2025-06-19 01:44:10 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:44:10 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:44:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:44:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:44:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:44:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:44:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:44:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:44:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:44:43 [http-nio-8080-exec-9] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:44:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:44:43.409274300, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:44:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:44:43.409274300, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:44:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:44:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:44:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@26e365b3]
2025-06-19 01:44:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:44:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:44:55 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:44:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:44:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:44:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:44:55 [http-nio-8080-exec-10] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:44:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:44:55.295893300, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:44:55 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:44:55.295893300, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:44:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:44:55 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:45:06 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:45:06 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:45:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:45:06 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:45:06 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@32475bc6]
2025-06-19 01:45:06 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:45:13 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:45:13 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:45:13 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:45:13 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-19 01:45:13 [http-nio-8080-exec-5] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-19 01:45:13 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-19 01:45:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:45:13 [http-nio-8080-exec-5] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/cartoons/2/episodes: No static resource api/cartoons/2/episodes.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-19 01:45:13 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/cartoons/2/episodes.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:45:13.382837500, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:45:13 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-19T01:45:13.382837500, path=/api/cartoons/2/episodes, developerMessage=No static resource api/cartoons/2/episodes.}]
2025-06-19 01:45:13 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-19 01:45:13 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:45:13 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@2cc869c]
2025-06-19 01:45:13 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:45:13 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:46:44 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 27700 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\demo-0.0.1-SNAPSHOT.jar started by Admin in c:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo)
2025-06-19 01:46:44 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-19 01:46:44 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-19 01:46:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-19 01:46:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 11 JPA repository interfaces.
2025-06-19 01:46:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-19 01:46:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-19 01:46:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-19 01:46:45 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-19 01:46:45 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1280 ms
2025-06-19 01:46:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-19 01:46:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@26be9a6
2025-06-19 01:46:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-19 01:46:46 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-19 01:46:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-19 01:46:46 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-19 01:46:46 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-19 01:46:46 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-19 01:46:46 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-19 01:46:46 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-19 01:46:47 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-19 01:46:47 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 01:46:47 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-19 01:46:47 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-19 01:46:47 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-19 01:46:48 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-19 01:46:48 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'filterChain' defined in class path resource [com/example/demo/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
2025-06-19 01:46:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 01:46:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-19 01:46:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-19 01:46:48 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-19 01:46:48 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-19 01:46:48 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'filterChain' defined in class path resource [com/example/demo/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.example.demo.DemoApplication.main(DemoApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)
	at org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)
	at org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 26 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1278)
	at org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.createMvcMatchers(AbstractRequestMatcherRegistry.java:126)
	at org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.requestMatchers(AbstractRequestMatcherRegistry.java:222)
	at com.example.demo.config.SecurityConfig.lambda$filterChain$2(SecurityConfig.java:32)
	at org.springframework.security.config.annotation.web.builders.HttpSecurity.authorizeHttpRequests(HttpSecurity.java:1489)
	at com.example.demo.config.SecurityConfig.filterChain(SecurityConfig.java:31)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$0.CGLIB$filterChain$4(<generated>)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:393)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$0.filterChain(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 29 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:747)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1426)
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:372)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.initHandlerMappings(HandlerMappingIntrospector.java:135)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.afterPropertiesSet(HandlerMappingIntrospector.java:123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:676)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:637)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:507)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:84)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:986)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 62 common frames omitted
2025-06-19 01:47:38 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 11548 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\demo-0.0.1-SNAPSHOT.jar started by Admin in c:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo)
2025-06-19 01:47:38 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-19 01:47:38 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-19 01:47:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-19 01:47:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 11 JPA repository interfaces.
2025-06-19 01:47:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-19 01:47:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-19 01:47:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-19 01:47:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-19 01:47:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1342 ms
2025-06-19 01:47:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-19 01:47:40 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@689faf79
2025-06-19 01:47:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-19 01:47:40 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-19 01:47:40 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-19 01:47:40 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-19 01:47:40 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-19 01:47:40 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-19 01:47:40 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-19 01:47:40 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-19 01:47:41 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-19 01:47:41 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 01:47:41 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-19 01:47:42 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-19 01:47:42 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-19 01:47:42 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-19 01:47:42 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'filterChain' defined in class path resource [com/example/demo/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
2025-06-19 01:47:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 01:47:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-19 01:47:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-19 01:47:42 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-19 01:47:42 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-19 01:47:42 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'filterChain' defined in class path resource [com/example/demo/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.example.demo.DemoApplication.main(DemoApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)
	at org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)
	at org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 26 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1278)
	at org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.createMvcMatchers(AbstractRequestMatcherRegistry.java:126)
	at org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.requestMatchers(AbstractRequestMatcherRegistry.java:222)
	at com.example.demo.config.SecurityConfig.lambda$filterChain$2(SecurityConfig.java:32)
	at org.springframework.security.config.annotation.web.builders.HttpSecurity.authorizeHttpRequests(HttpSecurity.java:1489)
	at com.example.demo.config.SecurityConfig.filterChain(SecurityConfig.java:31)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$0.CGLIB$filterChain$0(<generated>)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:393)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$0.filterChain(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 29 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:747)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1426)
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:372)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.initHandlerMappings(HandlerMappingIntrospector.java:135)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.afterPropertiesSet(HandlerMappingIntrospector.java:123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'cartoonControllerApi' method 
com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
to {GET [/api/cartoons/{id}/episodes]}: There is already 'cartoonController' bean method
com.example.demo.controller.CartoonController#getEpisodes(Integer) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:676)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:637)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:507)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:84)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:986)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 62 common frames omitted
2025-06-19 01:49:16 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 17252 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\demo-0.0.1-SNAPSHOT.jar started by Admin in c:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo)
2025-06-19 01:49:16 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-19 01:49:16 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-19 01:49:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-19 01:49:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 11 JPA repository interfaces.
2025-06-19 01:49:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-19 01:49:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-19 01:49:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-19 01:49:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-19 01:49:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1254 ms
2025-06-19 01:49:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-19 01:49:17 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@582e9152
2025-06-19 01:49:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-19 01:49:17 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-19 01:49:17 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-19 01:49:17 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-19 01:49:18 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-19 01:49:18 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-19 01:49:18 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-19 01:49:18 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-19 01:49:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-19 01:49:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 01:49:19 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-19 01:49:19 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-19 01:49:19 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-19 01:49:19 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-19 01:49:19 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 87 mappings in 'requestMappingHandlerMapping'
2025-06-19 01:49:19 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-19 01:49:20 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-19 01:49:20 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-19 01:49:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-19 01:49:20 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 4.635 seconds (process running for 4.945)
2025-06-19 01:49:46 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-19 01:49:46 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-19 01:49:46 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-19 01:49:46 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-19 01:49:46 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-19 01:49:46 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@720f0fa2
2025-06-19 01:49:46 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1bb6b0f3
2025-06-19 01:49:46 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-19 01:49:46 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-19 01:49:46 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:49:46 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:49:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:49:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:49:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:49:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@19f5180f, com.example.demo.entity.Episode@71790935]]
2025-06-19 01:49:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:50:19 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:50:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:50:19 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:50:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:50:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:50:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:50:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:50:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:50:19 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:50:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5909f9ea]
2025-06-19 01:50:19 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@43c77e88, com.example.demo.entity.Episode@79439aa9]]
2025-06-19 01:50:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:50:19 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:50:19 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:50:19 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:50:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:50:19 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:50:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:50:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:50:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:50:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:50:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@1a9e80cb]
2025-06-19 01:50:19 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:50:19 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:50:19 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@1b2daa03, com.example.demo.entity.Episode@744572b7]]
2025-06-19 01:50:19 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:50:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:50:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:50:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:50:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:50:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:50:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:50:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:50:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:50:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@6467698]
2025-06-19 01:50:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:50:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:50:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@35bd7bdf, com.example.demo.entity.Episode@50d1f772]]
2025-06-19 01:50:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:04 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@7945af68]
2025-06-19 01:51:04 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@28d96c6, com.example.demo.entity.Episode@47ee0091]]
2025-06-19 01:51:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:10 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:10 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:10 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:10 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:10 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:10 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@726cab7a]
2025-06-19 01:51:10 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:10 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:10 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@5e6cbe62, com.example.demo.entity.Episode@363501aa]]
2025-06-19 01:51:10 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:16 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@32f57555]
2025-06-19 01:51:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:16 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:16 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@139ce222, com.example.demo.entity.Episode@1e4183fb]]
2025-06-19 01:51:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:16 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:16 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:16 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:16 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:16 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@79fb1404]
2025-06-19 01:51:16 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:16 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@717b65d0, com.example.demo.entity.Episode@1e14d1f0]]
2025-06-19 01:51:16 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:22 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:22 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:22 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@653a99c7]
2025-06-19 01:51:22 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:22 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:22 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@31ebb48a, com.example.demo.entity.Episode@574af97a]]
2025-06-19 01:51:22 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:30 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:30 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:30 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:30 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:30 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@2ca66476]
2025-06-19 01:51:30 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3289c47c, com.example.demo.entity.Episode@79b61fcc]]
2025-06-19 01:51:30 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:36 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:36 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@115deaa6]
2025-06-19 01:51:36 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7a31e43a, com.example.demo.entity.Episode@1f77cd9a]]
2025-06-19 01:51:36 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:43 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:43 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:43 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:43 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@1986c870]
2025-06-19 01:51:43 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7170c0ce, com.example.demo.entity.Episode@1ed82ad5]]
2025-06-19 01:51:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:55 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:55 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:55 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:55 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:55 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@936d605]
2025-06-19 01:51:55 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3b1ef2b0, com.example.demo.entity.Episode@713d7a20]]
2025-06-19 01:51:55 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:56 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:56 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:56 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@630f5d5b]
2025-06-19 01:51:56 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:56 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:56 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@56a1f1e6, com.example.demo.entity.Episode@400b126d]]
2025-06-19 01:51:56 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:57 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@1b0a0108]
2025-06-19 01:51:57 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@528c6953, com.example.demo.entity.Episode@7009f815]]
2025-06-19 01:51:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:57 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:57 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:57 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:57 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@43b5a2ee]
2025-06-19 01:51:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:57 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7380d146, com.example.demo.entity.Episode@449d4c87]]
2025-06-19 01:51:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:58 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:58 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:58 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:58 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:58 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@18332ca2]
2025-06-19 01:51:58 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3c37fc81, com.example.demo.entity.Episode@70267f77]]
2025-06-19 01:51:58 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:59 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:51:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:51:59 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:51:59 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:51:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:51:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:51:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@746b7831]
2025-06-19 01:51:59 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:51:59 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:51:59 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@32b55640, com.example.demo.entity.Episode@5b780d91]]
2025-06-19 01:51:59 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:02 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:52:02 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:52:02 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:52:02 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:52:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:02 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:52:02 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@41a0af3a]
2025-06-19 01:52:02 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:02 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:02 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3cc1f18e, com.example.demo.entity.Episode@27cd659c]]
2025-06-19 01:52:02 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:02 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:52:02 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:52:02 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:52:02 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:52:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:02 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:52:02 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@25139fdd]
2025-06-19 01:52:02 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:02 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:02 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@58dc8427, com.example.demo.entity.Episode@465771b3]]
2025-06-19 01:52:02 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:52:03 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:52:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:52:03 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:52:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:52:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@180599c7]
2025-06-19 01:52:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:03 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:03 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@c1639e8, com.example.demo.entity.Episode@752effd5]]
2025-06-19 01:52:03 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:06 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:52:06 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:52:06 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:52:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:52:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:52:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@41631619]
2025-06-19 01:52:06 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:06 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:06 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@37a6babb, com.example.demo.entity.Episode@7dabd2f8]]
2025-06-19 01:52:06 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:07 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:52:07 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:52:07 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:52:07 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:52:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:07 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:52:07 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@4453ea00]
2025-06-19 01:52:07 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:07 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:07 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@31ffea31, com.example.demo.entity.Episode@1a5108b8]]
2025-06-19 01:52:07 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:52:26 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:52:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:52:26 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:52:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:26 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:52:26 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@23b08bab]
2025-06-19 01:52:26 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@6d41c56e, com.example.demo.entity.Episode@1bc7ff88]]
2025-06-19 01:52:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:31 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:52:31 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:52:31 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:52:31 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:52:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:31 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:52:31 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@3d114023]
2025-06-19 01:52:31 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:31 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:31 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@505c8fbd, com.example.demo.entity.Episode@79eb07af]]
2025-06-19 01:52:31 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:52:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:52:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:52:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@17c0fa4e, com.example.demo.entity.Cartoon@2048d136, com.example.dem (truncated)...]
2025-06-19 01:52:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:33 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login", parameters={}
2025-06-19 01:52:33 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.LoginController#login()
2025-06-19 01:52:33 [http-nio-8080-exec-3] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-19 01:52:34 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.gender,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-19 01:52:35 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/users?continue", parameters={masked}
2025-06-19 01:52:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#listUsers(Model)
2025-06-19 01:52:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.gender,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-19 01:52:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-19 01:52:35 [http-nio-8080-exec-8] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-8][users] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template users, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-19 01:52:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-19 01:52:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-19 01:52:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-19 01:52:35 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:37 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:52:37 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:52:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:52:37 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:37 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@1ffd3609, com.example.demo.entity.Cartoon@678ee7ba, com.example.dem (truncated)...]
2025-06-19 01:52:37 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:39 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:52:39 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:52:39 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:52:39 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:39 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:52:39 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@694e505d]
2025-06-19 01:52:39 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:39 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:39 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@298aab4b, com.example.demo.entity.Episode@17fd967d]]
2025-06-19 01:52:39 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:52:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:52:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:52:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:52:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:52:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5d42cfe9]
2025-06-19 01:52:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@2f74267, com.example.demo.entity.Episode@9c22793]]
2025-06-19 01:52:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:53 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:52:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:52:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:52:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@40d407d9, com.example.demo.entity.Cartoon@3088bd44, com.example.dem (truncated)...]
2025-06-19 01:52:53 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:54 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:52:54 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:52:54 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:52:54 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:52:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:52:54 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:52:54 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@278ff7f3]
2025-06-19 01:52:54 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:52:54 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:52:54 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4ad8af05]]
2025-06-19 01:52:54 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:53:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:53:28 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:53:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:53:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:53:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:53:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:53:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:53:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:53:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@60837b02]
2025-06-19 01:53:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:53:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:53:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@6a9af02a]]
2025-06-19 01:53:28 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:54:43 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:54:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:54:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:54:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:54:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:54:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:54:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:54:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:54:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@10e5bec5]
2025-06-19 01:54:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:54:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:54:43 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7d65f3db]]
2025-06-19 01:54:43 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:54:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:54:53 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:54:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:54:53 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:54:53 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@3d3e139f, com.example.demo.entity.Cartoon@10b95c08, com.example.dem (truncated)...]
2025-06-19 01:54:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:55:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:55:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:55:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:55:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:55:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:55:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:55:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:55:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:55:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@6ad424d5]
2025-06-19 01:55:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:55:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:55:18 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@268fd6ac]]
2025-06-19 01:55:18 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:55:41 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:55:41 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:55:41 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:55:41 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:55:41 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:55:41 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@31068b63]
2025-06-19 01:55:41 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:55:41 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:55:41 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4e67b499]]
2025-06-19 01:55:41 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:55:41 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:55:41 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:55:41 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:55:41 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:55:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:55:41 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:55:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:55:41 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@44304737]
2025-06-19 01:55:41 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:55:41 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:55:41 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@794dd0e0]]
2025-06-19 01:55:41 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:55:57 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:55:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:55:57 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:55:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:55:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:55:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:55:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:55:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:55:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@771ddeaa]
2025-06-19 01:55:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:55:57 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:55:57 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@104d04c5]]
2025-06-19 01:55:57 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:55:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:55:58 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:55:58 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:55:58 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:55:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:55:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:55:58 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:55:58 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@a9e62bb]
2025-06-19 01:55:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:55:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:55:58 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:55:58 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@21665eef]]
2025-06-19 01:55:58 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:56:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:56:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:56:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:56:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:56:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:56:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4007b8ec, com.example.demo.entity.Episode@15d95756]]
2025-06-19 01:56:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:56:34 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:56:34 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:56:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:56:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:56:34 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:56:34 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:56:34 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:56:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:56:34 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:56:34 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4c4d663, com.example.demo.entity.Episode@6baad779]]
2025-06-19 01:56:34 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:56:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:56:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:56:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:56:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:56:34 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@35a52309]
2025-06-19 01:56:34 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:56:34 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:56:34 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@360ec06b]]
2025-06-19 01:56:34 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:56:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:56:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:56:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:56:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:56:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:56:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:56:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:56:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:56:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:56:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7c3e2975, com.example.demo.entity.Episode@2aa39a30]]
2025-06-19 01:56:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:56:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:56:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:56:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:56:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:56:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@43562119]
2025-06-19 01:56:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:56:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:56:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@67a31f1d]]
2025-06-19 01:56:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:01 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:57:01 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:01 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:01 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@50715ee, com.example.demo.entity.Episode@341b12dc]]
2025-06-19 01:57:01 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:01 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:57:01 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:57:01 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:57:01 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:01 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:01 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@68fca75d]
2025-06-19 01:57:01 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:01 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:01 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@2797d698]]
2025-06-19 01:57:01 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:57:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:02 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:57:02 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:57:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@16fc2bf5, com.example.demo.entity.Episode@14d291a3]]
2025-06-19 01:57:02 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:02 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:57:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:02 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:02 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@6c24d1af]
2025-06-19 01:57:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:02 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:02 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:02 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@65b20135]]
2025-06-19 01:57:02 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:08 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:57:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:08 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@597ea64a, com.example.demo.entity.Episode@1999f9c2]]
2025-06-19 01:57:08 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:46 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:57:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:46 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@5a4203df, com.example.demo.entity.Episode@35e02a67]]
2025-06-19 01:57:46 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:46 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:57:46 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:46 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:46 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7975ef2f, com.example.demo.entity.Episode@773ca6a6]]
2025-06-19 01:57:46 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:46 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:57:46 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:57:46 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:57:46 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:46 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:46 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@439f11f9]
2025-06-19 01:57:46 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:46 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:46 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7eede1e6]]
2025-06-19 01:57:46 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:57:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4625d5fe, com.example.demo.entity.Episode@684ba373]]
2025-06-19 01:57:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:47 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3", parameters={}
2025-06-19 01:57:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/3/episodes", parameters={}
2025-06-19 01:57:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:57:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:47 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:57:47 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5ee82f5e]
2025-06-19 01:57:47 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4ed14e2e]]
2025-06-19 01:57:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:47 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:47 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@6f7e8c9a, com.example.demo.entity.Episode@69c35f91]]
2025-06-19 01:57:47 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:52 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:57:52 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:57:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:57:52 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:52 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@70ddb3bd, com.example.demo.entity.Cartoon@9b35bca, com.example.demo (truncated)...]
2025-06-19 01:57:52 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:54 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:57:54 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:57:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:57:54 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:54 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@72723071, com.example.demo.entity.Cartoon@792ba5d0, com.example.dem (truncated)...]
2025-06-19 01:57:54 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:56 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 01:57:56 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 01:57:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 01:57:56 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:56 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@3160dd18, com.example.demo.entity.Cartoon@e5c9a78, com.example.demo (truncated)...]
2025-06-19 01:57:56 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:57 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:57:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:57:57 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:57:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:57:57 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:57:57 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5346eb35]
2025-06-19 01:57:57 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:57:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:57:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@74ac76b6, com.example.demo.entity.Episode@58abf2c0]]
2025-06-19 01:57:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:16 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:16 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:16 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:16 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@1ef9ba93, com.example.demo.entity.Episode@50e1276b]]
2025-06-19 01:58:16 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@71f1441a, com.example.demo.entity.Episode@44d648f3]]
2025-06-19 01:58:17 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:17 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:58:17 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:17 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:58:17 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:17 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:17 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@4da9ea26]
2025-06-19 01:58:17 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:17 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:17 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4c4806db, com.example.demo.entity.Episode@41e0efc8]]
2025-06-19 01:58:17 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:17 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:17 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:17 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:17 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7880fac1, com.example.demo.entity.Episode@368afaf]]
2025-06-19 01:58:17 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:17 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:17 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:17 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:17 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@50732a4e, com.example.demo.entity.Episode@3ca0f1b3]]
2025-06-19 01:58:17 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:17 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:58:17 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:58:17 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@24856a89]
2025-06-19 01:58:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:17 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:17 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:17 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4cc1d192, com.example.demo.entity.Episode@b9c38ea]]
2025-06-19 01:58:17 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:32 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@6a8ffe08, com.example.demo.entity.Episode@7e43ac45]]
2025-06-19 01:58:32 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@44fbb444, com.example.demo.entity.Episode@529fc3e0]]
2025-06-19 01:58:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:32 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:58:32 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:58:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@17ad91]
2025-06-19 01:58:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:32 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:32 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@38cc1413, com.example.demo.entity.Episode@76a8cff5]]
2025-06-19 01:58:32 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:35 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:35 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:35 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:35 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@49124be5, com.example.demo.entity.Episode@225b0307]]
2025-06-19 01:58:35 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:35 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:35 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:35 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:35 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@18e0e4b, com.example.demo.entity.Episode@52e21e12]]
2025-06-19 01:58:35 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:35 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:58:35 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:58:35 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:35 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@2fde789e]
2025-06-19 01:58:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:35 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:35 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:35 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@35aec6c3, com.example.demo.entity.Episode@3fec5609]]
2025-06-19 01:58:35 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@6e72e12d, com.example.demo.entity.Episode@78a773fa]]
2025-06-19 01:58:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7480cf50, com.example.demo.entity.Episode@3234fb47]]
2025-06-19 01:58:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:58:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:58:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@7bf1ec70]
2025-06-19 01:58:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@cd7b443, com.example.demo.entity.Episode@7a08103b]]
2025-06-19 01:58:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:51 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@6244983, com.example.demo.entity.Episode@304c47aa]]
2025-06-19 01:58:51 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:51 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:51 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:51 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:51 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3b4357dc, com.example.demo.entity.Episode@38e10c0b]]
2025-06-19 01:58:51 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:51 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:51 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:58:51 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:51 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:58:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:51 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:51 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:51 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@74e1c824]
2025-06-19 01:58:51 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:51 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:51 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@5b86346b, com.example.demo.entity.Episode@48c90d9b]]
2025-06-19 01:58:51 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:54 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:54 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:54 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:54 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@50428abb, com.example.demo.entity.Episode@148e6ff7]]
2025-06-19 01:58:54 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:54 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3374e2b7, com.example.demo.entity.Episode@64c65687]]
2025-06-19 01:58:54 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:54 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:58:54 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:58:54 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:58:54 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:58:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:58:54 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:58:54 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@113350e]
2025-06-19 01:58:54 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:58:54 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:58:54 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@235c20fe, com.example.demo.entity.Episode@76e80c6d]]
2025-06-19 01:58:54 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:59:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:59:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:59:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:59:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:59:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:59:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3b45bdab, com.example.demo.entity.Episode@1bac38b5]]
2025-06-19 01:59:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:59:41 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:59:41 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:59:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:59:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:59:41 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:59:41 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@1e49a7e9, com.example.demo.entity.Episode@7ac46908]]
2025-06-19 01:59:41 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:59:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:59:41 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:59:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:59:41 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:59:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:59:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:59:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:59:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:59:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5295a11d]
2025-06-19 01:59:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:59:41 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:59:41 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@47006681, com.example.demo.entity.Episode@47b760c7]]
2025-06-19 01:59:41 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:59:42 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:59:42 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:59:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:59:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:59:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:59:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@39ef9222, com.example.demo.entity.Episode@55f5d1e5]]
2025-06-19 01:59:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:59:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:59:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:59:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:59:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:59:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:59:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@692f2242, com.example.demo.entity.Episode@71efe065]]
2025-06-19 01:59:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:59:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 01:59:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 01:59:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 01:59:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 01:59:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:59:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 01:59:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:59:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@727416e6]
2025-06-19 01:59:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 01:59:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 01:59:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 01:59:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@42be49e1, com.example.demo.entity.Episode@56e75388]]
2025-06-19 01:59:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@2a2d598a, com.example.demo.entity.Episode@7111875e]]
2025-06-19 02:00:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:26 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:26 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:26 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:26 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3f0b22f3, com.example.demo.entity.Episode@7be3214c]]
2025-06-19 02:00:26 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:26 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:26 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:00:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:26 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:00:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:26 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:26 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@6254c1bd]
2025-06-19 02:00:26 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:26 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@45626de1, com.example.demo.entity.Episode@300ef3a2]]
2025-06-19 02:00:26 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:31 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:31 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:31 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:31 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4f2722a6, com.example.demo.entity.Episode@4dd76353]]
2025-06-19 02:00:31 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:31 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@534c74dd, com.example.demo.entity.Episode@7e372e1c]]
2025-06-19 02:00:31 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:31 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:00:31 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:00:31 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@404435df]
2025-06-19 02:00:31 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:31 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:31 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@42b6e87d, com.example.demo.entity.Episode@5ce0137f]]
2025-06-19 02:00:31 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@57f33878, com.example.demo.entity.Episode@65071e92]]
2025-06-19 02:00:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@1729fb1b, com.example.demo.entity.Episode@2479c06a]]
2025-06-19 02:00:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:00:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:00:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@7b93f184]
2025-06-19 02:00:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@16670e7d, com.example.demo.entity.Episode@6dfecbea]]
2025-06-19 02:00:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@5765df54, com.example.demo.entity.Episode@44e17454]]
2025-06-19 02:00:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:47 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:47 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:47 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:47 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@5995fbfb, com.example.demo.entity.Episode@a3c9dc4]]
2025-06-19 02:00:47 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:00:47 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:00:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:00:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:00:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:00:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:00:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5f5f3f2a]
2025-06-19 02:00:47 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:00:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:00:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4006140d, com.example.demo.entity.Episode@205e5543]]
2025-06-19 02:00:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:22 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:22 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:22 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:22 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4807206d, com.example.demo.entity.Episode@71b6c19f]]
2025-06-19 02:01:22 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:22 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:22 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:22 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:22 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@23c27183, com.example.demo.entity.Episode@c4e13a8]]
2025-06-19 02:01:22 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:22 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:01:22 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:01:22 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@115392dc]
2025-06-19 02:01:22 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:22 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:22 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@750c7a0e, com.example.demo.entity.Episode@2faf718b]]
2025-06-19 02:01:22 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3ca182ec, com.example.demo.entity.Episode@618827ed]]
2025-06-19 02:01:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:30 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@2d00616b, com.example.demo.entity.Episode@651ecc24]]
2025-06-19 02:01:30 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:30 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:01:30 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:30 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:01:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:30 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:30 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@17700ede]
2025-06-19 02:01:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:30 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:30 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@1859b19f, com.example.demo.entity.Episode@39274722]]
2025-06-19 02:01:30 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:40 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:40 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:40 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:40 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@608b7e97, com.example.demo.entity.Episode@6d0f578a]]
2025-06-19 02:01:40 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:40 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:40 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7a91803a, com.example.demo.entity.Episode@75db6cd7]]
2025-06-19 02:01:40 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:40 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:01:40 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:40 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:01:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:40 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:40 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@2525911f]
2025-06-19 02:01:40 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7baab206, com.example.demo.entity.Episode@1f5f2297]]
2025-06-19 02:01:40 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:58 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:58 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:58 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:58 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4790540b, com.example.demo.entity.Episode@7e513157]]
2025-06-19 02:01:58 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:58 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@610a0ff6, com.example.demo.entity.Episode@6ce8ac1c]]
2025-06-19 02:01:58 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:58 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:01:58 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:01:58 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@4bbcb450]
2025-06-19 02:01:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:58 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:58 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:58 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@774795ac, com.example.demo.entity.Episode@764fdd28]]
2025-06-19 02:01:58 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:59 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:59 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:59 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:59 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@4093c193, com.example.demo.entity.Episode@55a4d742]]
2025-06-19 02:01:59 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:59 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:59 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:59 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:59 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@1bfef6b3, com.example.demo.entity.Episode@51b8369d]]
2025-06-19 02:01:59 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:59 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:01:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:01:59 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:01:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:01:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:01:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:01:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@c40d41d]
2025-06-19 02:01:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:01:59 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:01:59 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@5ff4db20, com.example.demo.entity.Episode@5ed17df4]]
2025-06-19 02:01:59 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:02:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:02:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:02:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:02:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:02:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:02:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@5141957d, com.example.demo.entity.Episode@3ca6fe02]]
2025-06-19 02:02:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:02:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:02:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:02:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:02:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:02:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:02:43 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@658e0cb7, com.example.demo.entity.Episode@29814f78]]
2025-06-19 02:02:43 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:02:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:02:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:02:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:02:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:02:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:02:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:02:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:02:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:02:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@47395f9a]
2025-06-19 02:02:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:02:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:02:43 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@7afabcc5, com.example.demo.entity.Episode@234155d8]]
2025-06-19 02:02:43 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:03:17 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:03:17 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:03:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:03:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:03:17 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:03:17 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@2e5fa37a, com.example.demo.entity.Episode@7abd27ae]]
2025-06-19 02:03:17 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:03:17 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:03:17 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:03:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:03:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:03:17 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:03:17 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3e8bbabb, com.example.demo.entity.Episode@1bf3d460]]
2025-06-19 02:03:17 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:03:17 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:03:17 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:03:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:03:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:03:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:03:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:03:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:03:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:03:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@29c54aaa]
2025-06-19 02:03:17 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:03:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:03:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@3d5fcf8b, com.example.demo.entity.Episode@3da8a652]]
2025-06-19 02:03:17 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:03:21 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:03:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:03:21 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:03:21 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:03:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:03:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:03:21 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:03:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:03:21 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5eecfb7b]
2025-06-19 02:03:21 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:03:21 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:03:21 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@63958ec5, com.example.demo.entity.Episode@5df9314b]]
2025-06-19 02:03:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:03 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/6", parameters={}
2025-06-19 02:04:03 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/6/episodes", parameters={}
2025-06-19 02:04:03 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:04:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:04:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:04:03 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@64ed9a1]
2025-06-19 02:04:03 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:03 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:03 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@275148c3]]
2025-06-19 02:04:03 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:07 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/9/episodes", parameters={}
2025-06-19 02:04:07 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/9", parameters={}
2025-06-19 02:04:07 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:04:07 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:04:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:07 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:04:07 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@32681089]
2025-06-19 02:04:07 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:07 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:07 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@6c031402]]
2025-06-19 02:04:07 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:13 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:04:13 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:04:13 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:04:13 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:04:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:04:13 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:13 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@38c6c375]
2025-06-19 02:04:13 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:13 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:13 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@58c4bfeb, com.example.demo.entity.Episode@4d485d4d]]
2025-06-19 02:04:13 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:20 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/9", parameters={}
2025-06-19 02:04:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:04:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5487eb23]
2025-06-19 02:04:20 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/9/episodes", parameters={}
2025-06-19 02:04:20 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:04:20 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:04:20 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:20 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@155edb2f]]
2025-06-19 02:04:20 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:25 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/6", parameters={}
2025-06-19 02:04:25 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:04:25 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/6/episodes", parameters={}
2025-06-19 02:04:25 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:04:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:25 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:25 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@5e21c53c]
2025-06-19 02:04:25 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:04:25 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:25 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@400bc2f8]]
2025-06-19 02:04:25 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:26 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2", parameters={}
2025-06-19 02:04:26 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonById(Integer)
2025-06-19 02:04:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:26 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:26 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons/2/episodes", parameters={}
2025-06-19 02:04:26 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Cartoon@1ed1b9d6]
2025-06-19 02:04:26 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getCartoonEpisodes(Integer)
2025-06-19 02:04:26 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-19 02:04:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        e 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            e1_0.id,
            e1_0.cartoonn_id,
            e1_0.created_at,
            e1_0.description,
            e1_0.duration,
            e1_0.episode_num,
            e1_0.season_num,
            e1_0.thumbnail_url,
            e1_0.title,
            e1_0.video_url,
            e1_0.views 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-19 02:04:26 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:26 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Episode@60e49a3, com.example.demo.entity.Episode@20d0b6a6]]
2025-06-19 02:04:26 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:27 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cartoons", parameters={}
2025-06-19 02:04:27 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.CartoonController#getAllCartoons()
2025-06-19 02:04:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-19 02:04:27 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-19 02:04:27 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[com.example.demo.entity.Cartoon@6e3d286, com.example.demo.entity.Cartoon@4e707db2, com.example.demo (truncated)...]
2025-06-19 02:04:27 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-19 02:04:37 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-19 02:04:37 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-19 02:04:37 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-19 02:04:37 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-19 02:04:37 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
