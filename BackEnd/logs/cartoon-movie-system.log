2025-06-10 13:01:18 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.7 with PID 16756 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\classes started by Admin in C:\Users\Admin\Desktop\Cartoon-movie\BackEnd)
2025-06-10 13:01:18 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-10 13:01:18 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-10 13:01:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-10 13:01:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 6 JPA repository interfaces.
2025-06-10 13:01:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-10 13:01:19 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-10 13:01:19 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-10 13:01:19 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-10 13:01:19 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1226 ms
2025-06-10 13:01:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-10 13:01:19 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6e1ae763
2025-06-10 13:01:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-10 13:01:19 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-10 13:01:19 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-10 13:01:19 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-10 13:01:20 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-10 13:01:20 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-10 13:01:20 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-10 13:01:20 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-10 13:01:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-10 13:01:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 13:01:20 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-10 13:01:21 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10 13:01:21 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-10 13:01:21 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10 13:01:21 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 64 mappings in 'requestMappingHandlerMapping'
2025-06-10 13:01:21 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-10 13:01:21 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-10 13:01:21 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-10 13:01:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-10 13:01:21 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 4.07 seconds (process running for 4.333)
2025-06-10 13:01:25 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-10 13:01:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-10 13:01:25 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-10 13:01:25 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-10 13:01:25 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-10 13:01:25 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@15c25cb6
2025-06-10 13:01:25 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4476ac12
2025-06-10 13:01:25 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-10 13:01:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-10 13:01:25 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login", parameters={}
2025-06-10 13:01:25 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 13:01:25 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 13:01:25 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 13:01:25 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-10 13:01:25 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 13:01:25 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 13:01:31 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login", parameters={}
2025-06-10 13:01:31 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 13:01:31 [http-nio-8080-exec-4] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 13:01:31 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 13:03:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 13:03:50 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 13:03:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 13:03:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 13:03:50 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 13:27:03 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.7 with PID 5904 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\classes started by Admin in C:\Users\Admin\Desktop\Cartoon-movie\BackEnd)
2025-06-10 13:27:03 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-10 13:27:03 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-10 13:27:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-10 13:27:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.
2025-06-10 13:27:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-10 13:27:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-10 13:27:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-10 13:27:04 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-10 13:27:04 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1071 ms
2025-06-10 13:27:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-10 13:27:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@650aa077
2025-06-10 13:27:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-10 13:27:04 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-10 13:27:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-10 13:27:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-10 13:27:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-10 13:27:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-10 13:27:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-10 13:27:05 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-10 13:27:05 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-10 13:27:05 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 13:27:05 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-10 13:27:06 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10 13:27:06 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-10 13:27:06 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10 13:27:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 64 mappings in 'requestMappingHandlerMapping'
2025-06-10 13:27:06 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-10 13:27:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-10 13:27:06 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-10 13:27:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-10 13:27:06 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 3.923 seconds (process running for 4.102)
2025-06-10 13:27:13 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-10 13:27:13 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-10 13:27:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-10 13:27:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-10 13:27:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-10 13:27:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4b37ede0
2025-06-10 13:27:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2081c267
2025-06-10 13:27:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-10 13:27:13 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-10 13:27:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 13:27:13 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 13:27:13 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 13:27:13 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 13:27:13 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-10 13:27:13 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 13:27:13 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 13:27:15 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 13:27:15 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 13:27:16 [http-nio-8080-exec-4] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 13:27:16 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 13:27:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-10 13:27:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 13:27:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 13:27:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 13:27:22 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-10 13:27:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 13:27:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 13:27:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 13:27:22 [http-nio-8080-exec-6] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /: No static resource .
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 13:27:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T13:27:22.534581700, path=/, developerMessage=No static resource .}]
2025-06-10 13:27:22 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T13:27:22.534581700, path=/, developerMessage=No static resource .}]
2025-06-10 13:27:22 [http-nio-8080-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 13:27:22 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 13:27:55 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 13:27:55 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 13:27:55 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 13:27:55 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 13:27:55 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 13:27:55 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 13:27:55 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 13:27:55 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 13:27:55 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 13:27:55 [http-nio-8080-exec-7] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-7][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 13:27:55 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 13:27:55 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/admin.css", parameters={}
2025-06-10 13:27:55 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/sidebar.css", parameters={}
2025-06-10 13:27:55 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 13:27:55 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 13:27:55 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 13:27:55 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 14:21:49 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.7 with PID 11064 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\classes started by Admin in C:\Users\Admin\Desktop\Cartoon-movie\BackEnd)
2025-06-10 14:21:49 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-10 14:21:49 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-10 14:21:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-10 14:21:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 6 JPA repository interfaces.
2025-06-10 14:21:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-10 14:21:50 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-10 14:21:50 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-10 14:21:50 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-10 14:21:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1164 ms
2025-06-10 14:21:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-10 14:21:50 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a9ec80e
2025-06-10 14:21:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-10 14:21:51 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-10 14:21:51 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-10 14:21:51 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-10 14:21:51 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-10 14:21:51 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-10 14:21:51 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-10 14:21:51 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-10 14:21:51 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-10 14:21:51 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 14:21:52 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-10 14:21:52 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10 14:21:52 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-10 14:21:52 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10 14:21:52 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 64 mappings in 'requestMappingHandlerMapping'
2025-06-10 14:21:52 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-10 14:21:53 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-10 14:21:53 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-10 14:21:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-10 14:21:53 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 4.177 seconds (process running for 4.389)
2025-06-10 14:21:58 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-10 14:21:58 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-10 14:21:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-10 14:21:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-10 14:21:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-10 14:21:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6752d7fc
2025-06-10 14:21:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@76c1ede3
2025-06-10 14:21:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-10 14:21:58 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-10 14:21:58 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login", parameters={}
2025-06-10 14:21:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 14:21:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 14:21:58 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 14:22:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 14:22:00 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/?continue", parameters={masked}
2025-06-10 14:22:00 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 14:22:00 [http-nio-8080-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 14:22:00 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 14:22:00 [http-nio-8080-exec-4] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /: No static resource .
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 14:22:00 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T14:22:00.461830500, path=/, developerMessage=No static resource .}]
2025-06-10 14:22:00 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T14:22:00.461830500, path=/, developerMessage=No static resource .}]
2025-06-10 14:22:00 [http-nio-8080-exec-4] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 14:22:00 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 14:22:05 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 14:22:05 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 14:22:05 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 14:22:05 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 14:22:05 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 14:22:05 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 14:22:05 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 14:22:05 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 14:22:05 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 14:22:05 [http-nio-8080-exec-3] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-3][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 14:22:05 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 14:22:08 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?logout", parameters={masked}
2025-06-10 14:22:08 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 14:22:08 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 14:22:08 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 14:22:12 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login", parameters={}
2025-06-10 14:22:12 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 14:22:12 [http-nio-8080-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 14:22:12 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 14:22:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin?continue", parameters={masked}
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 14:22:16 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 14:22:16 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 14:22:16 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 14:22:16 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 14:22:16 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 14:22:16 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 14:22:16 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 14:22:16 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 14:22:16 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 14:22:16 [http-nio-8080-exec-1] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-1][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 14:22:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:08:49 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.7 with PID 15240 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\classes started by Admin in C:\Users\Admin\Desktop\Cartoon-movie\BackEnd)
2025-06-10 18:08:49 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-10 18:08:49 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-10 18:08:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-10 18:08:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.
2025-06-10 18:08:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-10 18:08:50 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-10 18:08:50 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-10 18:08:50 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-10 18:08:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 983 ms
2025-06-10 18:08:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-10 18:08:50 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@e91af20
2025-06-10 18:08:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-10 18:08:50 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-10 18:08:50 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-10 18:08:50 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-10 18:08:50 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-10 18:08:50 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-10 18:08:50 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-10 18:08:50 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-10 18:08:51 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-10 18:08:51 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 18:08:51 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-10 18:08:52 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10 18:08:52 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-10 18:08:52 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10 18:08:52 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 64 mappings in 'requestMappingHandlerMapping'
2025-06-10 18:08:52 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-10 18:08:52 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-10 18:08:52 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-10 18:08:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-10 18:08:52 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 4.084 seconds (process running for 4.34)
2025-06-10 18:08:57 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-10 18:08:57 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-10 18:08:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-10 18:08:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-10 18:08:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-10 18:08:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@28023029
2025-06-10 18:08:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5a7e2f07
2025-06-10 18:08:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-10 18:08:57 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-10 18:08:57 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login", parameters={}
2025-06-10 18:08:57 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:08:57 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:08:57 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:08:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-10 18:08:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:08:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 18:09:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin?continue", parameters={masked}
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:02 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:02 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:02 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:02 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:02 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:02 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:02 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:02 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:02 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:02 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-5][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:02 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:02 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/admin.css", parameters={}
2025-06-10 18:09:02 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/sidebar.css", parameters={}
2025-06-10 18:09:02 [http-nio-8080-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:09:02 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:09:02 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 18:09:02 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/movies", parameters={}
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminMovieController#listMovies(String, String, String, String, Model)
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:08 [http-nio-8080-exec-8] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-8][movies] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template movies, line 23, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:08 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/movies.css", parameters={}
2025-06-10 18:09:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:09:08 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 18:09:08 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:09 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/users", parameters={}
2025-06-10 18:09:09 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#listUsers(Model)
2025-06-10 18:09:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:09:09 [http-nio-8080-exec-10] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:09 [http-nio-8080-exec-10] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-10][users] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template users, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:09:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:09:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:09:09 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:10 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:10 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:10 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:10 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:10 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:10 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:10 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:10 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:10 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:10 [http-nio-8080-exec-1] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-1][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:10 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/movies", parameters={}
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminMovieController#listMovies(String, String, String, String, Model)
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:10 [http-nio-8080-exec-2] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-2][movies] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template movies, line 23, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:10 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:11 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/users", parameters={}
2025-06-10 18:09:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#listUsers(Model)
2025-06-10 18:09:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:09:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:11 [http-nio-8080-exec-3] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-3][users] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template users, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 18:09:11 [http-nio-8080-exec-4] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:11 [http-nio-8080-exec-4] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 18:09:11 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:11 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:11 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:11 [http-nio-8080-exec-4] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 1
2025-06-10 18:09:11 [http-nio-8080-exec-4] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:11 [http-nio-8080-exec-4] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-4][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/reviews.css", parameters={}
2025-06-10 18:09:11 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:09:11 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:11 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:11 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:11 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:11 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:11 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:11 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:11 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:11 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:11 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:11 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:11 [http-nio-8080-exec-6] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-6][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:11 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 18:09:12 [http-nio-8080-exec-7] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:12 [http-nio-8080-exec-7] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 18:09:12 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:12 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:12 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:12 [http-nio-8080-exec-7] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 1
2025-06-10 18:09:12 [http-nio-8080-exec-7] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:12 [http-nio-8080-exec-7] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-7][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:09:12 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:13 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:13 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:13 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:13 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:13 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:13 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:13 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:13 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:13 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:13 [http-nio-8080-exec-9] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-9][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:13 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:19 [http-nio-8080-exec-8] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:19 [http-nio-8080-exec-8] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:19 [http-nio-8080-exec-8] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:09:19 [http-nio-8080-exec-8] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:19 [http-nio-8080-exec-8] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:19 [http-nio-8080-exec-8] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:19 [http-nio-8080-exec-8] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:09:19 [http-nio-8080-exec-8] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:09:19 [http-nio-8080-exec-8] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:19 [http-nio-8080-exec-8] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-8][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:09:19 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:22 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?logout", parameters={masked}
2025-06-10 18:09:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:09:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:22 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:09:27 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 18:09:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:09:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:27 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:09:28 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-10 18:09:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:09:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 18:09:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 18:09:28 [http-nio-8080-exec-4] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /: No static resource .
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 18:09:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:09:28.282993900, path=/, developerMessage=No static resource .}]
2025-06-10 18:09:28 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:09:28.282993900, path=/, developerMessage=No static resource .}]
2025-06-10 18:09:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:28 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:33 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-10 18:09:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:09:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 18:09:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 18:09:33 [http-nio-8080-exec-6] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /: No static resource .
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 18:09:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:09:33.662070500, path=/, developerMessage=No static resource .}]
2025-06-10 18:09:33 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:09:33.662070500, path=/, developerMessage=No static resource .}]
2025-06-10 18:09:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:33 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:34 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 18:09:34 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:09:34 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:34 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:09:41 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 18:09:41 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:09:41 [http-nio-8080-exec-8] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:41 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:09:42 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-10 18:09:42 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:09:42 [http-nio-8080-exec-1] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 18:09:42 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 18:09:42 [http-nio-8080-exec-1] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /: No static resource .
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 18:09:42 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:09:42.897607300, path=/, developerMessage=No static resource .}]
2025-06-10 18:09:42 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:09:42.897607300, path=/, developerMessage=No static resource .}]
2025-06-10 18:09:42 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:42 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:09:50 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-10 18:09:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:09:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 18:09:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 18:09:50 [http-nio-8080-exec-2] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /: No static resource .
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 18:09:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:09:50.692279900, path=/, developerMessage=No static resource .}]
2025-06-10 18:09:50 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:09:50.692279900, path=/, developerMessage=No static resource .}]
2025-06-10 18:09:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:09:50 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:10:00 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:10:00 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:10:00 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:10:00 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:10:00 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:10:00 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:10:00 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:10:00 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:10:00 [http-nio-8080-exec-3] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:10:00 [http-nio-8080-exec-3] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-3][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:10:00 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:10:01 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?logout", parameters={masked}
2025-06-10 18:10:01 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:10:01 [http-nio-8080-exec-4] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:10:01 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:10:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:10:03 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-10 18:10:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:10:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 18:10:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 18:10:03 [http-nio-8080-exec-7] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /: No static resource .
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 18:10:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:10:03.736991700, path=/, developerMessage=No static resource .}]
2025-06-10 18:10:03 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:10:03.736991700, path=/, developerMessage=No static resource .}]
2025-06-10 18:10:03 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:10:03 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:11:40 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.7 with PID 9400 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\classes started by Admin in C:\Users\Admin\Desktop\Cartoon-movie\BackEnd)
2025-06-10 18:11:40 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-10 18:11:40 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-10 18:11:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-10 18:11:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 6 JPA repository interfaces.
2025-06-10 18:11:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-10 18:11:41 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-10 18:11:41 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-10 18:11:41 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-10 18:11:41 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1038 ms
2025-06-10 18:11:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-10 18:11:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@48cb2d73
2025-06-10 18:11:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-10 18:11:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-10 18:11:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-10 18:11:42 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-10 18:11:42 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-10 18:11:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-10 18:11:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-10 18:11:42 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-10 18:11:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-10 18:11:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 18:11:43 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-10 18:11:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10 18:11:43 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-10 18:11:43 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10 18:11:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 64 mappings in 'requestMappingHandlerMapping'
2025-06-10 18:11:44 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-10 18:11:44 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-10 18:11:44 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-10 18:11:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-10 18:11:44 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 3.654 seconds (process running for 3.833)
2025-06-10 18:11:49 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-10 18:11:49 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-10 18:11:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-10 18:11:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-10 18:11:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-10 18:11:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3a4ddaed
2025-06-10 18:11:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4b37ede0
2025-06-10 18:11:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-10 18:11:49 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-06-10 18:11:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?logout", parameters={masked}
2025-06-10 18:11:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:11:49 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:11:49 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:11:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:50 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:11:50 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:11:50 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:50 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:11:50 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:11:50 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:11:50 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:11:50 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:11:50 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:11:50 [http-nio-8080-exec-2] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-2][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:11:50 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/statistics", parameters={}
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminStatisticsController#statistics(Model)
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:57 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:11:57 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:11:57 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:57 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:11:57 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:11:57 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:11:57 [http-nio-8080-exec-4] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-4][statistics] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template statistics, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:11:57 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 18:11:58 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:58 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 18:11:58 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:11:58 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:11:58 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:11:58 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 1
2025-06-10 18:11:58 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:11:58 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-5][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:11:58 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:11:59 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/users", parameters={}
2025-06-10 18:11:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#listUsers(Model)
2025-06-10 18:11:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:11:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:11:59 [http-nio-8080-exec-8] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-8][users] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template users, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:11:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:11:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:11:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:11:59 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:12:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/admin/users/update-role/2", parameters={masked}
2025-06-10 18:12:04 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#updateUserRole(Integer, String, RedirectAttributes)
2025-06-10 18:12:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-10 18:12:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.example.demo.entity.User */update users 
    set
        created_at=?,
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        username=? 
    where
        id=?
2025-06-10 18:12:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.view.RedirectView - View name [redirect:], model {}
2025-06-10 18:12:04 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-06-10 18:12:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/users", parameters={}
2025-06-10 18:12:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#listUsers(Model)
2025-06-10 18:12:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:12:04 [http-nio-8080-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:12:04 [http-nio-8080-exec-6] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-6][users] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template users, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:12:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:12:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:12:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:12:04 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:12:07 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?logout", parameters={masked}
2025-06-10 18:12:07 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:12:07 [http-nio-8080-exec-10] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:12:07 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:12:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:12:11 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 18:12:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:12:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:12:11 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:12:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:12:14 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:12:14 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:12:14 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:12:14 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:12:14 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:12:14 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:12:14 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:12:14 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:12:14 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:12:14 [http-nio-8080-exec-4] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-4][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:12:14 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 18:12:16 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:12:16 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 18:12:16 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:12:16 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:12:16 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:12:16 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 1
2025-06-10 18:12:16 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:12:16 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-5][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:12:16 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:12:17 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/users", parameters={}
2025-06-10 18:12:17 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#listUsers(Model)
2025-06-10 18:12:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:12:17 [http-nio-8080-exec-8] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:12:17 [http-nio-8080-exec-8] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-8][users] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template users, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:12:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:12:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:12:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:12:17 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:12:51 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.7 with PID 8704 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\classes started by Admin in C:\Users\Admin\Desktop\Cartoon-movie\BackEnd)
2025-06-10 18:12:51 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-10 18:12:51 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-10 18:12:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-10 18:12:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 6 JPA repository interfaces.
2025-06-10 18:12:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-10 18:12:52 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-10 18:12:52 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-10 18:12:52 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-10 18:12:52 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1046 ms
2025-06-10 18:12:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-10 18:12:52 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c4d2c44
2025-06-10 18:12:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-10 18:12:52 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-10 18:12:52 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-10 18:12:52 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-10 18:12:52 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-10 18:12:52 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-10 18:12:52 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-10 18:12:52 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-10 18:12:53 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-10 18:12:53 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 18:12:53 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-10 18:12:53 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10 18:12:54 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-10 18:12:54 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10 18:12:54 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 64 mappings in 'requestMappingHandlerMapping'
2025-06-10 18:12:54 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-10 18:12:54 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-10 18:12:54 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-10 18:12:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-10 18:12:54 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 3.83 seconds (process running for 4.024)
2025-06-10 18:12:58 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-10 18:12:58 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-10 18:12:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-10 18:12:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-10 18:12:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-10 18:12:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3569f0f1
2025-06-10 18:12:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@776eedad
2025-06-10 18:12:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-10 18:12:58 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-10 18:12:58 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?logout", parameters={masked}
2025-06-10 18:12:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:12:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:12:58 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:13:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:13:03 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:13:03 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:13:03 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:13:03 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:13:03 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:13:03 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:13:03 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:13:03 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:13:03 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:13:03 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-5][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:13:03 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:13:15 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?logout", parameters={masked}
2025-06-10 18:13:15 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 18:13:15 [http-nio-8080-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:13:15 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:13:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:13:16 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:13:16 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:13:16 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:13:16 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:13:16 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:13:16 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:13:16 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:13:16 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:13:16 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:13:16 [http-nio-8080-exec-9] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-9][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:13:16 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:13:20 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/users", parameters={}
2025-06-10 18:13:20 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#listUsers(Model)
2025-06-10 18:13:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:13:20 [http-nio-8080-exec-8] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:13:20 [http-nio-8080-exec-8] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-8][users] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template users, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:13:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:13:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:13:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:13:20 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:13:23 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/admin/users/update-role/2", parameters={masked}
2025-06-10 18:13:23 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#updateUserRole(Integer, String, RedirectAttributes)
2025-06-10 18:13:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-10 18:13:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* update
        for com.example.demo.entity.User */update users 
    set
        created_at=?,
        email=?,
        enabled=?,
        full_name=?,
        password=?,
        role=?,
        username=? 
    where
        id=?
2025-06-10 18:13:23 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.view.RedirectView - View name [redirect:], model {}
2025-06-10 18:13:23 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-06-10 18:13:23 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/users", parameters={}
2025-06-10 18:13:23 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#listUsers(Model)
2025-06-10 18:13:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:13:23 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:13:23 [http-nio-8080-exec-1] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-1][users] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template users, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:13:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:13:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:13:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 18:13:23 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 18:18:18 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:18 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 18:18:18 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:18:18 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:18:18 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:18:18 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 1
2025-06-10 18:18:18 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:18:18 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-5][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 18:18:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/statistics", parameters={}
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminStatisticsController#statistics(Model)
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:24 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:18:24 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:18:24 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:24 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:18:24 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:18:24 [http-nio-8080-exec-4] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:18:24 [http-nio-8080-exec-4] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-4][statistics] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template statistics, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:18:24 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:26 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:18:26 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:18:26 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 18:18:26 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:18:26 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:18:26 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:18:26 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 18:18:26 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 1 reviews
2025-06-10 18:18:26 [http-nio-8080-exec-6] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:18:26 [http-nio-8080-exec-6] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-6][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 18:18:26 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 18:23:19 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/settings", parameters={}
2025-06-10 18:23:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 18:23:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 18:23:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 18:23:19 [http-nio-8080-exec-8] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /admin/settings: No static resource admin/settings.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource admin/settings.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 18:23:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource admin/settings.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:23:19.008289900, path=/admin/settings, developerMessage=No static resource admin/settings.}]
2025-06-10 18:23:19 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T18:23:19.008289900, path=/admin/settings, developerMessage=No static resource admin/settings.}]
2025-06-10 18:23:19 [http-nio-8080-exec-8] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 18:23:19 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 19:53:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 19:53:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 19:53:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 19:53:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-10 19:53:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 19:59:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 19:59:14 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 19:59:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 19:59:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-10 19:59:14 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 19:59:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 19:59:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 19:59:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 19:59:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-10 19:59:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 20:11:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 20:11:49 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login?error", parameters={masked}
2025-06-10 20:11:49 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 20:11:49 [http-nio-8080-exec-6] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-10 20:11:49 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 20:20:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 20:20:51 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/reviews?continue", parameters={masked}
2025-06-10 20:20:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.ReviewController#createReview(Review)
2025-06-10 20:20:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to []
2025-06-10 20:20:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, HttpServletRequest)
2025-06-10 20:20:51 [http-nio-8080-exec-3] ERROR c.e.d.e.GlobalExceptionHandler - Runtime exception at /api/reviews: Required request body is missing: public org.springframework.http.ResponseEntity<com.example.demo.entity.Review> com.example.demo.controller.api.ReviewController.createReview(com.example.demo.entity.Review)
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.example.demo.entity.Review> com.example.demo.controller.api.ReviewController.createReview(com.example.demo.entity.Review)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:179)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:150)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 20:20:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.example.demo.entity.Review> com.example.demo.controller.api.ReviewController.createReview(com.example.demo.entity.Review)] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please try again later., timestamp=2025-06-10T20:20:51.851548900, path=/api/reviews, developerMessage=Required request body is missing: public org.springframework.http.ResponseEntity<com.example.demo.entity.Review> com.example.demo.controller.api.ReviewController.createReview(com.example.demo.entity.Review)}]
2025-06-10 20:20:51 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please try again later., timestamp=2025-06-10T20:20:51.851548900, path=/api/reviews, developerMessage=Required request body is missing: public org.springframework.http.ResponseEntity<com.example.demo.entity.Review> com.example.demo.controller.api.ReviewController.createReview(com.example.demo.entity.Review)}]
2025-06-10 20:20:51 [http-nio-8080-exec-3] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-10 20:20:51 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 20:20:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 20:21:05 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/reviews", parameters={}
2025-06-10 20:21:05 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.ReviewController#createReview(Review)
2025-06-10 20:21:05 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.demo.entity.Review@7e74a7c3]
2025-06-10 20:21:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        com.example.demo.entity.Review */insert 
    into
        review (cartoon_id, content, created_at, rating, username) 
    values
        (?, ?, ?, ?, ?)
2025-06-10 20:21:05 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-10 20:21:05 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Review@7e74a7c3]
2025-06-10 20:21:05 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-10 20:22:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/replies", parameters={}
2025-06-10 20:22:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 20:22:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 20:22:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 20:22:43 [http-nio-8080-exec-9] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/replies: No static resource api/replies.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/replies.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 20:22:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/replies.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T20:22:43.681571600, path=/api/replies, developerMessage=No static resource api/replies.}]
2025-06-10 20:22:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T20:22:43.681571600, path=/api/replies, developerMessage=No static resource api/replies.}]
2025-06-10 20:22:43 [http-nio-8080-exec-9] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-10 20:22:43 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 20:28:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 20:28:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 20:28:41 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/reviews", parameters={}
2025-06-10 20:28:41 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.ReviewController#createReview(Review)
2025-06-10 20:28:41 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.demo.entity.Review@57608edc]
2025-06-10 20:28:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        com.example.demo.entity.Review */insert 
    into
        review (cartoon_id, content, created_at, rating, username) 
    values
        (?, ?, ?, ?, ?)
2025-06-10 20:28:41 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-10 20:28:41 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Review@57608edc]
2025-06-10 20:28:41 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-10 20:28:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/replies", parameters={}
2025-06-10 20:28:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 20:28:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 20:28:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 20:28:43 [http-nio-8080-exec-7] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/replies: No static resource api/replies.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/replies.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 20:28:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/replies.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T20:28:43.934954400, path=/api/replies, developerMessage=No static resource api/replies.}]
2025-06-10 20:28:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T20:28:43.934954400, path=/api/replies, developerMessage=No static resource api/replies.}]
2025-06-10 20:28:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-10 20:28:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 20:29:07 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/replies", parameters={}
2025-06-10 20:29:07 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 20:29:07 [http-nio-8080-exec-8] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-10 20:29:07 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)
2025-06-10 20:29:07 [http-nio-8080-exec-8] ERROR c.e.d.e.GlobalExceptionHandler - Unhandled exception occurred at /api/replies: No static resource api/replies.
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/replies.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 20:29:07 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/replies.] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T20:29:07.683082300, path=/api/replies, developerMessage=No static resource api/replies.}]
2025-06-10 20:29:07 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please contact support if the problem persists., timestamp=2025-06-10T20:29:07.683082300, path=/api/replies, developerMessage=No static resource api/replies.}]
2025-06-10 20:29:07 [http-nio-8080-exec-8] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-10 20:29:07 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 20:45:36 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-10 20:45:36 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-10 20:45:36 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 20:45:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-10 20:45:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-10 22:34:41 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.7 with PID 6432 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\classes started by Admin in C:\Users\Admin\Desktop\Cartoon-movie\BackEnd)
2025-06-10 22:34:41 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-10 22:34:41 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-10 22:34:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-10 22:34:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 7 JPA repository interfaces.
2025-06-10 22:34:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-10 22:34:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-10 22:34:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-10 22:34:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-10 22:34:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 935 ms
2025-06-10 22:34:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-10 22:34:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31f77791
2025-06-10 22:34:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-10 22:34:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-10 22:34:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-10 22:34:42 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-10 22:34:42 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-10 22:34:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-10 22:34:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-10 22:34:42 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-10 22:34:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-10 22:34:43 [main] DEBUG org.hibernate.SQL - 
    alter table reply 
       modify column content varchar(255)
2025-06-10 22:34:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 22:34:43 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-10 22:34:44 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10 22:34:44 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-10 22:34:44 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10 22:34:44 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'filterChain' defined in class path resource [com/example/demo/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'reviewRestController' method 
com.example.demo.controller.api.ReviewRestController#getAll()
to {GET [/api/reviews]}: There is already 'reviewController' bean method
com.example.demo.controller.api.ReviewController#getAllReviews() mapped.
2025-06-10 22:34:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 22:34:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-10 22:34:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-10 22:34:44 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-10 22:34:44 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-10 22:34:44 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'filterChain' defined in class path resource [com/example/demo/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'reviewRestController' method 
com.example.demo.controller.api.ReviewRestController#getAll()
to {GET [/api/reviews]}: There is already 'reviewController' bean method
com.example.demo.controller.api.ReviewController#getAllReviews() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.example.demo.DemoApplication.main(DemoApplication.java:10)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.web.SecurityFilterChain]: Factory method 'filterChain' threw exception with message: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'reviewRestController' method 
com.example.demo.controller.api.ReviewRestController#getAll()
to {GET [/api/reviews]}: There is already 'reviewController' bean method
com.example.demo.controller.api.ReviewController#getAllReviews() mapped.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcHandlerMappingIntrospector' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'reviewRestController' method 
com.example.demo.controller.api.ReviewRestController#getAll()
to {GET [/api/reviews]}: There is already 'reviewController' bean method
com.example.demo.controller.api.ReviewController#getAllReviews() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1278)
	at org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.createMvcMatchers(AbstractRequestMatcherRegistry.java:126)
	at org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.requestMatchers(AbstractRequestMatcherRegistry.java:222)
	at org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.requestMatchers(AbstractRequestMatcherRegistry.java:369)
	at com.example.demo.config.SecurityConfig.lambda$1(SecurityConfig.java:30)
	at org.springframework.security.config.annotation.web.builders.HttpSecurity.authorizeHttpRequests(HttpSecurity.java:1489)
	at com.example.demo.config.SecurityConfig.filterChain(SecurityConfig.java:29)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$0.CGLIB$filterChain$3(<generated>)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:393)
	at com.example.demo.config.SecurityConfig$$SpringCGLIB$$0.filterChain(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'reviewRestController' method 
com.example.demo.controller.api.ReviewRestController#getAll()
to {GET [/api/reviews]}: There is already 'reviewController' bean method
com.example.demo.controller.api.ReviewController#getAllReviews() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:747)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1426)
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:372)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.initHandlerMappings(HandlerMappingIntrospector.java:135)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.afterPropertiesSet(HandlerMappingIntrospector.java:123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 45 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'reviewRestController' method 
com.example.demo.controller.api.ReviewRestController#getAll()
to {GET [/api/reviews]}: There is already 'reviewController' bean method
com.example.demo.controller.api.ReviewController#getAllReviews() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:676)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:637)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:507)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:84)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:986)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 58 common frames omitted
2025-06-10 22:36:13 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.7 with PID 6296 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\classes started by Admin in C:\Users\Admin\Desktop\Cartoon-movie\BackEnd)
2025-06-10 22:36:13 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-10 22:36:13 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-10 22:36:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-10 22:36:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 7 JPA repository interfaces.
2025-06-10 22:36:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-10 22:36:14 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-10 22:36:14 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-10 22:36:14 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-10 22:36:14 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 989 ms
2025-06-10 22:36:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-10 22:36:14 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@475f5672
2025-06-10 22:36:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-10 22:36:14 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-10 22:36:14 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-10 22:36:14 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-10 22:36:15 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-10 22:36:15 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-10 22:36:15 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-10 22:36:15 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-10 22:36:15 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-10 22:36:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 22:36:15 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-10 22:36:16 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10 22:36:16 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-10 22:36:16 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10 22:36:16 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 68 mappings in 'requestMappingHandlerMapping'
2025-06-10 22:36:16 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-10 22:36:16 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-10 22:36:16 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-10 22:36:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-10 22:36:16 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 3.699 seconds (process running for 3.873)
2025-06-10 22:36:21 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-10 22:36:21 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-10 22:36:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-10 22:36:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-10 22:36:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-10 22:36:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@cf9a1f1
2025-06-10 22:36:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@72216f0b
2025-06-10 22:36:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-10 22:36:21 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-10 22:36:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 22:37:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin", parameters={}
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 3 reviews
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 1: ID=15, user=null, cartoon=Naruto
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 2: ID=16, user=null, cartoon=Naruto
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 3 reviews
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 1: ID=15, user=null, cartoon=Naruto
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 2: ID=16, user=null, cartoon=Naruto
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 3 reviews
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 1: ID=15, user=null, cartoon=Naruto
2025-06-10 22:37:20 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 2: ID=16, user=null, cartoon=Naruto
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-10 22:37:20 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-5][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:37:20 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:37:27 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/reviews", parameters={}
2025-06-10 22:37:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.ReviewController#createReview(Review)
2025-06-10 22:37:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.demo.entity.Review@46cf5e9e]
2025-06-10 22:37:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        com.example.demo.entity.Review */insert 
    into
        review (cartoon_id, content, created_at, rating, username) 
    values
        (?, ?, ?, ?, ?)
2025-06-10 22:37:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-10 22:37:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Review@46cf5e9e]
2025-06-10 22:37:27 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/replies", parameters={}
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.ReplyRestController#createReply(Reply, CustomUserDetails)
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.demo.entity.Reply@69aaf61e]
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    left join
        cartoonn c1_0 
            on c1_0.id=r1_0.cartoon_id 
    where
        r1_0.id=?
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.example.demo.entity.Reply */insert 
    into
        reply (content, created_at, review_id, user_id) 
    values
        (?, ?, ?, ?)
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [com.example.demo.entity.Reply@69aaf61e]
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        e1_0.cartoonn_id,
        e1_0.id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0 
    where
        e1_0.cartoonn_id=?
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.demo.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException, HttpServletRequest)
2025-06-10 22:37:30 [http-nio-8080-exec-7] ERROR c.e.d.e.GlobalExceptionHandler - Runtime exception at /api/replies: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:494)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:126)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:345)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:208)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.fasterxml.jackson.databind.JsonMappingException: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`) (through reference chain: com.example.demo.entity.Reply["review"]->com.example.demo.entity.Review["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0]->com.example.demo.entity.Episode["cartoon"]->com.example.demo.entity.Cartoon["episodes"]->org.hibernate.collection.spi.PersistentBag[0])
	at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:401)
	at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:372)
	at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:345)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:153)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
Caused by: com.fasterxml.jackson.core.exc.StreamConstraintsException: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
	at com.fasterxml.jackson.core.StreamWriteConstraints._constructException(StreamWriteConstraints.java:177)
	at com.fasterxml.jackson.core.StreamWriteConstraints.validateNestingDepth(StreamWriteConstraints.java:162)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject(UTF8JsonGenerator.java:396)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:180)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)] to ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please try again later., timestamp=2025-06-10T22:37:30.626445900, path=/api/replies, developerMessage=Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)}]
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Using resolved error view: ModelAndView [view="error"; model={status=500, error=Internal Server Error, message=An unexpected error occurred. Please try again later., timestamp=2025-06-10T22:37:30.626445900, path=/api/replies, developerMessage=Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)}]
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Error rendering view [org.thymeleaf.spring6.view.ThymeleafView@7d888158]
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:526)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:188)
	at jakarta.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:108)
	at jakarta.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:108)
	at jakarta.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:108)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:156)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:370)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1437)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.IllegalStateException: getOutputStream() has already been called for this response
2025-06-10 22:37:30 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: getOutputStream() has already been called for this response] with root cause
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:526)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:188)
	at jakarta.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:108)
	at jakarta.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:108)
	at jakarta.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:108)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:156)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:370)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1437)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for POST "/error", parameters={}
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Tue Jun 10 22:37:30 ICT 2025, status=200, error=OK, message=Could not write JSON: Documen (truncated)...]
2025-06-10 22:37:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2025-06-10 22:38:56 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/login", parameters={}
2025-06-10 22:38:56 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.AuthController#login()
2025-06-10 22:38:56 [http-nio-8080-exec-9] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:38:56 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:38:57 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-10 22:38:57 [http-nio-8080-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 22:38:57 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 22:38:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin?continue", parameters={masked}
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminDashboardController#dashboard(Model)
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 4 reviews
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 1: ID=15, user=null, cartoon=Naruto
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 2: ID=16, user=null, cartoon=Naruto
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        e1_0.id,
        e1_0.cartoonn_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.duration,
        e1_0.episode_num,
        e1_0.season_num,
        e1_0.thumbnail_url,
        e1_0.title,
        e1_0.video_url,
        e1_0.views 
    from
        episodes e1_0
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.cartoon_id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 4 reviews
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 1: ID=15, user=null, cartoon=Naruto
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 2: ID=16, user=null, cartoon=Naruto
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 4 reviews
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 1: ID=15, user=null, cartoon=Naruto
2025-06-10 22:38:58 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 2: ID=16, user=null, cartoon=Naruto
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id desc 
    limit
        ?
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:38:58 [http-nio-8080-exec-2] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-2][admin] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template admin, line 18, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:38:58 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:38:58 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/admin.css", parameters={}
2025-06-10 22:38:58 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/sidebar.css", parameters={}
2025-06-10 22:38:58 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 22:38:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 22:38:58 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 22:38:58 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 22:39:04 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:39:04 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 22:39:04 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:39:04 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 4 reviews
2025-06-10 22:39:04 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:39:04 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 1: ID=15, user=null, cartoon=Naruto
2025-06-10 22:39:04 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 2: ID=16, user=null, cartoon=Naruto
2025-06-10 22:39:04 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 4
2025-06-10 22:39:04 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:39:04 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-5][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:39:04 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/reviews.css", parameters={}
2025-06-10 22:39:04 [http-nio-8080-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:39:04 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:40:25 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/reviews", parameters={}
2025-06-10 22:40:25 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.api.ReviewController#createReview(Review)
2025-06-10 22:40:25 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.demo.entity.Review@239d3aca]
2025-06-10 22:40:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.example.demo.entity.Review */insert 
    into
        review (cartoon_id, content, created_at, rating, username) 
    values
        (?, ?, ?, ?, ?)
2025-06-10 22:40:25 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-10 22:40:25 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.demo.entity.Review@239d3aca]
2025-06-10 22:40:25 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-10 22:40:38 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 22:40:38 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 22:40:38 [http-nio-8080-exec-1] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 22:40:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:38 [http-nio-8080-exec-1] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 22:40:38 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:40:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:40:38 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 5 reviews
2025-06-10 22:40:38 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:40:38 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - Review 1: ID=15, user=null, cartoon=Naruto
2025-06-10 22:40:38 [http-nio-8080-exec-1] INFO  c.example.demo.service.ReviewService - Review 2: ID=16, user=null, cartoon=Naruto
2025-06-10 22:40:38 [http-nio-8080-exec-1] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 5
2025-06-10 22:40:38 [http-nio-8080-exec-1] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 22:40:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:40:39 [http-nio-8080-exec-1] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-1][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:39 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:40:46 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/movies/edit/3", parameters={}
2025-06-10 22:40:46 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminMovieController#showEditForm(Integer, RedirectAttributes)
2025-06-10 22:40:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0 
    where
        c1_0.id=?
2025-06-10 22:40:46 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.view.RedirectView - View name [redirect:], model {}
2025-06-10 22:40:46 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/movies", parameters={}
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminMovieController#listMovies(String, String, String, String, Model)
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(e) 
    FROM
        Episode e 
    WHERE
        e.cartoon.id = :cartoonId */ select
            count(e1_0.id) 
        from
            episodes e1_0 
        where
            e1_0.cartoonn_id=?
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:46 [http-nio-8080-exec-3] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:40:46 [http-nio-8080-exec-3] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-3][movies] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template movies, line 23, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:40:47 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/css/movies.css", parameters={}
2025-06-10 22:40:47 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-10 22:40:47 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-10 22:40:47 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:40:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/users", parameters={}
2025-06-10 22:40:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminUserController#listUsers(Model)
2025-06-10 22:40:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.ban_comment_until,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.full_name,
        u1_0.password,
        u1_0.role,
        u1_0.username 
    from
        users u1_0
2025-06-10 22:40:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:40:49 [http-nio-8080-exec-10] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-10][users] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template users, line 13, col 6. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:40:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 22:40:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 22:40:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.user_id,
        a1_0.id,
        a2_0.id,
        a2_0.description,
        a2_0.name 
    from
        user_achievements a1_0 
    left join
        achievements a2_0 
            on a2_0.id=a1_0.achievement_id 
    where
        a1_0.user_id=?
2025-06-10 22:40:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 22:40:50 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:50 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 22:40:50 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:40:50 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 5 reviews
2025-06-10 22:40:50 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:40:50 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 1: ID=15, user=null, cartoon=Naruto
2025-06-10 22:40:50 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 2: ID=16, user=null, cartoon=Naruto
2025-06-10 22:40:50 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 5
2025-06-10 22:40:50 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:40:50 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-5][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:50 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:40:57 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/admin/reviews/delete/15", parameters={masked}
2025-06-10 22:40:57 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#deleteReview(Integer, RedirectAttributes)
2025-06-10 22:40:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    left join
        cartoonn c1_0 
            on c1_0.id=r1_0.cartoon_id 
    where
        r1_0.id=?
2025-06-10 22:40:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.review_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.user_id 
    from
        reply r1_0 
    where
        r1_0.review_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* delete for com.example.demo.entity.Review */delete 
    from
        review 
    where
        id=?
2025-06-10 22:40:57 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.view.RedirectView - View name [redirect:], model {}
2025-06-10 22:40:57 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 22:40:57 [http-nio-8080-exec-7] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:57 [http-nio-8080-exec-7] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 22:40:57 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:40:57 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 4 reviews
2025-06-10 22:40:57 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:40:57 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 1: ID=16, user=null, cartoon=Naruto
2025-06-10 22:40:57 [http-nio-8080-exec-7] INFO  c.example.demo.service.ReviewService - Review 2: ID=17, user=null, cartoon=Naruto
2025-06-10 22:40:57 [http-nio-8080-exec-7] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 4
2025-06-10 22:40:57 [http-nio-8080-exec-7] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:40:57 [http-nio-8080-exec-7] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-7][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:40:57 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:41:00 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/admin/reviews/delete/16", parameters={masked}
2025-06-10 22:41:00 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#deleteReview(Integer, RedirectAttributes)
2025-06-10 22:41:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    left join
        cartoonn c1_0 
            on c1_0.id=r1_0.cartoon_id 
    where
        r1_0.id=?
2025-06-10 22:41:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.review_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.user_id 
    from
        reply r1_0 
    where
        r1_0.review_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* delete for com.example.demo.entity.Review */delete 
    from
        review 
    where
        id=?
2025-06-10 22:41:00 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.view.RedirectView - View name [redirect:], model {}
2025-06-10 22:41:00 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 22:41:00 [http-nio-8080-exec-9] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:41:00 [http-nio-8080-exec-9] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 22:41:00 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:41:00 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 3 reviews
2025-06-10 22:41:00 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:41:00 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - Review 1: ID=17, user=null, cartoon=Naruto
2025-06-10 22:41:00 [http-nio-8080-exec-9] INFO  c.example.demo.service.ReviewService - Review 2: ID=18, user=null, cartoon=Bleach
2025-06-10 22:41:00 [http-nio-8080-exec-9] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 3
2025-06-10 22:41:00 [http-nio-8080-exec-9] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:41:00 [http-nio-8080-exec-9] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-9][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:00 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:41:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/admin/reviews/delete/17", parameters={masked}
2025-06-10 22:41:05 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#deleteReview(Integer, RedirectAttributes)
2025-06-10 22:41:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    left join
        cartoonn c1_0 
            on c1_0.id=r1_0.cartoon_id 
    where
        r1_0.id=?
2025-06-10 22:41:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.review_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.user_id 
    from
        reply r1_0 
    where
        r1_0.review_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* delete for com.example.demo.entity.Review */delete 
    from
        review 
    where
        id=?
2025-06-10 22:41:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.view.RedirectView - View name [redirect:], model {}
2025-06-10 22:41:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 302 FOUND
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 22:41:05 [http-nio-8080-exec-2] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:41:05 [http-nio-8080-exec-2] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 22:41:05 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:41:05 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 2 reviews
2025-06-10 22:41:05 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:41:05 [http-nio-8080-exec-2] INFO  c.example.demo.service.ReviewService - Review 1: ID=18, user=null, cartoon=Bleach
2025-06-10 22:41:05 [http-nio-8080-exec-2] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 2
2025-06-10 22:41:05 [http-nio-8080-exec-2] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:41:05 [http-nio-8080-exec-2] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-2][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:41:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:42:29 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/reviews", parameters={}
2025-06-10 22:42:29 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.demo.controller.admin.AdminReviewController#listReviews(int, Integer, Integer, String, String, Model)
2025-06-10 22:42:29 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Loading reviews - cartoonId: null, rating: null, sort: null, keyword: null
2025-06-10 22:42:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:42:29 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total cartoons in database: 11
2025-06-10 22:42:29 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() called
2025-06-10 22:42:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        r 
    FROM
        Review r 
    LEFT JOIN
        
    FETCH
        r.cartoon */ select
            r1_0.id,
            c1_0.id,
            c1_0.actors,
            c1_0.created_at,
            c1_0.description,
            c1_0.director,
            c1_0.duration,
            c1_0.genre,
            c1_0.image_url,
            c1_0.release_year,
            c1_0.status,
            c1_0.title,
            c1_0.total_episodes,
            c1_0.trailer_url,
            c1_0.video_url,
            r1_0.content,
            r1_0.created_at,
            r1_0.rating,
            r1_0.username 
        from
            review r1_0 
        left join
            cartoonn c1_0 
                on c1_0.id=r1_0.cartoon_id
2025-06-10 22:42:29 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - ReviewService.getAll() returned 2 reviews
2025-06-10 22:42:29 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 0: ID=14, user=user1, cartoon=Naruto
2025-06-10 22:42:29 [http-nio-8080-exec-5] INFO  c.example.demo.service.ReviewService - Review 1: ID=18, user=null, cartoon=Bleach
2025-06-10 22:42:29 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Total reviews from database: 2
2025-06-10 22:42:29 [http-nio-8080-exec-5] INFO  c.e.d.c.admin.AdminReviewController - Sample review - ID: 14, username: user1, cartoon: Naruto, rating: 4
2025-06-10 22:42:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:42:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.actors,
        c1_0.created_at,
        c1_0.description,
        c1_0.director,
        c1_0.duration,
        c1_0.genre,
        c1_0.image_url,
        c1_0.release_year,
        c1_0.status,
        c1_0.title,
        c1_0.total_episodes,
        c1_0.trailer_url,
        c1_0.video_url 
    from
        cartoonn c1_0
2025-06-10 22:42:29 [http-nio-8080-exec-5] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-10 22:42:29 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor - [THYMELEAF][http-nio-8080-exec-5][reviews] Deprecated unwrapped fragment expression "fragments/sidebar :: sidebar" found in template reviews, line 24, col 10. Please use the complete syntax of fragment expressions instead ("~{fragments/sidebar :: sidebar}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2025-06-10 22:42:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.cartoon_id,
        r1_0.id,
        r1_0.content,
        r1_0.created_at,
        r1_0.rating,
        r1_0.username 
    from
        review r1_0 
    where
        r1_0.cartoon_id=?
2025-06-10 22:42:30 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-10 22:49:46 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 21.0.7 with PID 23076 (C:\Users\Admin\Desktop\Cartoon-movie\BackEnd\demo\target\classes started by Admin in C:\Users\Admin\Desktop\Cartoon-movie\BackEnd)
2025-06-10 22:49:46 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.6, Spring v6.2.7
2025-06-10 22:49:46 [main] INFO  com.example.demo.DemoApplication - The following 1 profile is active: "dev"
2025-06-10 22:49:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-10 22:49:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 7 JPA repository interfaces.
2025-06-10 22:49:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-10 22:49:48 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-10 22:49:48 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-10 22:49:48 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-10 22:49:48 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1353 ms
2025-06-10 22:49:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-10 22:49:48 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31f77791
2025-06-10 22:49:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-10 22:49:48 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-10 22:49:48 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-10 22:49:48 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-10 22:49:48 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-10 22:49:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-10 22:49:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-10 22:49:48 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-10 22:49:49 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-10 22:49:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 22:49:49 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-10 22:49:50 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10 22:49:50 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-06-10 22:49:50 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10 22:49:50 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 68 mappings in 'requestMappingHandlerMapping'
2025-06-10 22:49:50 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-10 22:49:51 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-10 22:49:51 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-10 22:49:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-10 22:49:51 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 4.871 seconds (process running for 5.06)
2025-06-10 23:56:57 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-10 23:56:57 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-10 23:56:57 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-10 23:56:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-10 23:56:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
